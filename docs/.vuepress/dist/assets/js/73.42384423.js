(window.webpackJsonp=window.webpackJsonp||[]).push([[73],{343:function(a,s,t){"use strict";t.r(s);var e=t(13),r=Object(e.a)({},(function(){var a=this,s=a._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h2",{attrs:{id:"_1-简介"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-简介"}},[a._v("#")]),a._v(" 1 简介")]),a._v(" "),s("p",[a._v("docker swarm是docker官方提供的一套容器编排系统，是Docker公司推出的官方容器集群平台。基于 Go语言实现。")]),a._v(" "),s("h2",{attrs:{id:"_2-swarm的核心概念"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-swarm的核心概念"}},[a._v("#")]),a._v(" 2 Swarm的核心概念")]),a._v(" "),s("h3",{attrs:{id:"_2-1-集群"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-集群"}},[a._v("#")]),a._v(" 2.1 集群")]),a._v(" "),s("p",[a._v("一个集群由多个 Docker 主机组成，这些Docker主机以集群模式运行，并充当管理者（用于管理成员资格和委派）和工作人员（运行集群服务）与独立容器相比，集群服务的主要优势之一是，可以修改服务的配置，包括它所连接的网络和卷， 而无需手动重新启动服务。 独立容器和集群服务之间的主要区别在于，只有集群管理器可以管理集群，而独立容器可以在任何守护程序上启动。")]),a._v(" "),s("h3",{attrs:{id:"_2-2-节点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-节点"}},[a._v("#")]),a._v(" 2.2 节点")]),a._v(" "),s("p",[a._v("swarm是一系列节点的集合，而节点可以是一台裸机或者一台虚拟机。一个节点能扮演一个或者 两个角色，manager或者worker")]),a._v(" "),s("ul",[s("li",[a._v("manager节点：Docker Swarm集群需要至少一个manager节点，节点之间使用 Raft consensus protocol 进 行协同工作。 通常，第一个启用docker swarm的节点将成为leader，后来加入的都是follower。 当前的leader如果挂掉，剩余的节点将重新选举出一个新的leader。每一个manager都有一个完整的当前集群状态的副本，可以保证manager的高可用")]),a._v(" "),s("li",[a._v("worker节点：worker节点是运行实际应用服务的容器所在的地方。理论上，一个manager节点也能同时成为 worker节点，但在生产环境中，我们不建议这样做。 worker节点之间，通过 control plane 进行通信，这种通信使用 gossip 协议，并且是异步的")])]),a._v(" "),s("h3",{attrs:{id:"_2-3-服务和任务"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-服务和任务"}},[a._v("#")]),a._v(" 2.3 服务和任务")]),a._v(" "),s("ul",[s("li",[a._v("services(服务)\nswarm service是一个抽象的概念，它只是一个对运行在swarm集群上的应用服务，所期望状态的描述。它就像一个描述了下面物品的清单列表一样：\n"),s("ol",[s("li",[a._v("服务名称")]),a._v(" "),s("li",[a._v("使用哪个镜像来创建容器")]),a._v(" "),s("li",[a._v("要运行多少个副本")]),a._v(" "),s("li",[a._v("服务的容器要连接到哪个网络上")]),a._v(" "),s("li",[a._v("应该映射哪些端口")])])]),a._v(" "),s("li",[a._v("task(任务)\n在Docker Swarm中，task是一个部署的最小单元，task与容器是一对一的关系")]),a._v(" "),s("li",[a._v("stack(栈)\nstack是描述一系列相关services的集合。我们通过在一个YAML文件中来定义一个stack")])]),a._v(" "),s("h3",{attrs:{id:"_2-4-负载均衡"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-4-负载均衡"}},[a._v("#")]),a._v(" 2.4 负载均衡")]),a._v(" "),s("p",[a._v("集群管理器使用入口负载平衡将要从集群外部获取的服务公开给集群。 集群管理器可以自动为服务分配一个已发布端口，也可以为该服务配置一个已发布端口。 可以指定任何未使用的端口。如果未指定端口，则集群管理器会为服务分配 30000-32767 范围内 的端口。 集群模式具有一个内部DNS组件，该组件自动为群集中的每个服务分配一个DNS条目。 集群管理器使用内部负载平衡根据服务的DNS名称在群集内的服务之间分配请求。")]),a._v(" "),s("h2",{attrs:{id:"_3-swarm安装"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-swarm安装"}},[a._v("#")]),a._v(" 3 swarm安装")]),a._v(" "),s("p",[a._v("对于Docker 1.12+版本，Swarm相关命令已经原生嵌入到了Docker Engine中")]),a._v(" "),s("ol",[s("li",[a._v("下载镜像")])]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" pull swarm\n")])])]),s("ol",{attrs:{start:"2"}},[s("li",[a._v("查看版本")])]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" run "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--rm")]),a._v(" swarm "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-v")]),a._v("\n")])])]),s("h2",{attrs:{id:"_4-启动swarm集群"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-启动swarm集群"}},[a._v("#")]),a._v(" 4 启动swarm集群")]),a._v(" "),s("h3",{attrs:{id:"_4-1-创建集群"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-创建集群"}},[a._v("#")]),a._v(" 4.1 创建集群")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("root@VM-16-13-centos ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# docker swarm init --advertise-addr 172.16.86.47")]),a._v("\nSwarm initialized: current "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("node")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("0v2tft2rdxpd69hddbvntgudw"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" is now a manager.\n\nTo "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("add")]),a._v(" a worker to this swarm, run the following command:\n\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" swarm "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("join")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--token")]),a._v(" SWMTKN-1-0hpppzixb4quez76b5gid3fk5qputgxhjzq3ey5csvreb3kd8q-e7wkdlsx61fjiqbez9qbi2876 "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("172.16")]),a._v(".86.47:2377\n\nTo "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("add")]),a._v(" a manager to this swarm, run "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'docker swarm join-token manager'")]),a._v(" and follow the instructions.\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 将节点强制驱除集群")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" swarm leave "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--force")]),a._v("\n")])])]),s("p",[a._v("上面命令执行后，该机器自动加入到swarm集群。这个会创建一个集群token，获取全球唯一的 token，作为集群唯一标识。后续将其他节点加入集群都会用到这个token值。\n其中，--advertise-addr参数表示其它swarm中的worker节点使用此ip地址与manager联系。命令的输出包含了其它节点如何加入集群的命令。")]),a._v(" "),s("h3",{attrs:{id:"_4-2-查看集群状态和节点信息"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-查看集群状态和节点信息"}},[a._v("#")]),a._v(" 4.2 查看集群状态和节点信息")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" info\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("node")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("ls")]),a._v("\n")])])]),s("h3",{attrs:{id:"_4-3-添加工作节点到集群"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-添加工作节点到集群"}},[a._v("#")]),a._v(" 4.3 添加工作节点到集群")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("root@hadoop5 teacher"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# docker swarm join --token SWMTKN-1-60etl768pzoibxuqlpeuyyp73jjwwknbc2yvlfxpzwc568vr8o-e7y60md3jxd8u4mkxzug13xeb 172.16.86.47:2377")]),a._v("\nThis "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("node")]),a._v(" joined a swarm as a worker.\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 将节点强制驱除集群")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" swarm leave "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--force")]),a._v("\n")])])]),s("p",[a._v("如果忘记了token的值，在管理节点172.16.86.47上")]),a._v(" "),s("h3",{attrs:{id:"_4-4-发布服务到集群"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-4-发布服务到集群"}},[a._v("#")]),a._v(" 4.4 发布服务到集群")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("service")]),a._v(" create "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-p")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("80")]),a._v(":80 "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--replicas")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--name")]),a._v(" nginx1 nginx\n")])])]),s("p",[a._v("-p ：端口映射 --replicas：运行实例个数 --name：服务名 nginx : 镜像")]),a._v(" "),s("h3",{attrs:{id:"_4-5-查看发布的服务"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-5-查看发布的服务"}},[a._v("#")]),a._v(" 4.5 查看发布的服务")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#列表查询")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("service")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("ls")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#详细查询")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("service")]),a._v(" inspect "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--pretty")]),a._v(" nginx1\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 查看哪些节点正在运行服务")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("service")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("ps")]),a._v(" nginx1\n")])])]),s("h3",{attrs:{id:"_4-6-停止并删除发布的服务"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-6-停止并删除发布的服务"}},[a._v("#")]),a._v(" 4.6 停止并删除发布的服务")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("service")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("rm")]),a._v(" nginx1\n")])])]),s("h3",{attrs:{id:"_4-7-扩展一个或多个服务"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-7-扩展一个或多个服务"}},[a._v("#")]),a._v(" 4.7 扩展一个或多个服务")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("service")]),a._v(" scale "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("nginx1")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("3")]),a._v("\n")])])]),s("h3",{attrs:{id:"_4-8-更新服务"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-8-更新服务"}},[a._v("#")]),a._v(" 4.8 更新服务")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("service")]),a._v(" update --publish-rm "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("80")]),a._v(":80 --publish-add "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("88")]),a._v(":80 nginx1\n")])])]),s("p",[a._v("更多更新选项，具体可加 --help查询")])])}),[],!1,null,null,null);s.default=r.exports}}]);