(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{280:function(e,t,s){"use strict";s.r(t);var a=s(13),n=Object(a.a)({},(function(){var e=this,t=e._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h2",{attrs:{id:"选择语句"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#选择语句"}},[e._v("#")]),e._v(" 选择语句")]),e._v(" "),t("blockquote",[t("p",[e._v("切换数据库")])]),e._v(" "),t("div",{staticClass:"language-mysql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("use database\n")])])]),t("blockquote",[t("p",[e._v("SELECT")])]),e._v(" "),t("div",{staticClass:"language-mysql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("select * \n-- from customers \n-- where customer_id = 1 \n-- order by first_name;\n")])])]),t("p",[e._v("注释行都可选，甚至可以：")]),e._v(" "),t("div",{staticClass:"language-mysql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("select 1,2;\n")])])]),t("p",[e._v("结果列可以加入运算符")]),e._v(" "),t("div",{staticClass:"language-mysql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("select \npoints,\n(points+10)*100 as 'diccount' \nfrom customers\n")])])]),t("p",[e._v("去除重复项")]),e._v(" "),t("div",{staticClass:"language-mysql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("select distinct name from customers\n")])])]),t("blockquote",[t("p",[e._v("where")])]),e._v(" "),t("div",{staticClass:"language-mssql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("select * from customers where points > 300;\n-- > >= < <= = != <>不等于\n")])])]),t("div",{staticClass:"language-mysql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("select * \nfrom customers\nwhere birth_date > '1990-01-01' or points >1000 and state = 'va';\n-- and具有更高的优先级，所以（birth_date > '1990-01-01'） or （points >1000 and state = 'va'）\n")])])]),t("div",{staticClass:"language-mysql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("select * \nfrom customers\nwhere not (birth_date > '1990-01-01' or points > 1000);\n-- not 表示否定条件，相当于\nselect * \nfrom customers\nwhere birth_date < '1990-01-01' and points < 1000;\n")])])]),t("div",{staticClass:"language-mysql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("select * \nfrom customers\nwhere state in ('va','vl','ga');\n-- in 同一属性对应多个值\n")])])]),t("div",{staticClass:"language-mysql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("select * \nfrom customers\nwhere points between 1000 and 3000;\n")])])]),t("div",{staticClass:"language-mysql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("select *\nfrom customers\nwhere last_name like 'brush%';\n-- % 表示一个或过个字符，_ 表示一个字符\n")])])]),t("div",{staticClass:"language-mysql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("select * from customers\nwhere last_name regexp '^field';\n-- ^field 表示以字符串field开始的字符\n-- field$ 表示以字符串field结尾的字符\n-- field|mac 表示字符串中含有field或者mac的字符\n-- ^field|mac field开始的字符串或包含mac的字符串\n-- [gim]e 包含ge或者ie或者me的字符串\n-- [a-h]e 包含ae到he的字符串\n")])])]),t("div",{staticClass:"language-mysql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("select * from customers\nwhere phone is not null\n-- phone不为空\n")])])]),t("div",{staticClass:"language-mysql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("select * from customers\norder by first_name desc,state desc\n-- desc 降序\n\nselect first_name,last_name from customers\norder by 1,2\n-- 表示以first_name,last_name排序\n")])])]),t("div",{staticClass:"language-mysql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("select * from customers\nlimit 6,3\n-- 第一位是偏移量，第二位是查询条数\n")])])]),t("h2",{attrs:{id:"连接"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#连接"}},[e._v("#")]),e._v(" 连接")]),e._v(" "),t("h3",{attrs:{id:"内连接"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#内连接"}},[e._v("#")]),e._v(" 内连接")]),e._v(" "),t("p",[e._v("内连接也叫连接，是最早的一种连接。还可以被称为普通连接或者自然连接，内连接是从结果表中删除与其他被连接表中没有匹配行的所有行，所以内连接可能会丢失信息。简写 join on")]),e._v(" "),t("div",{staticClass:"language-mysql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("select * from orders o inner join customers c\non o.customer_id = c.customer_id\n")])])]),t("blockquote",[t("p",[e._v("跨数据")])]),e._v(" "),t("div",{staticClass:"language-mysql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("select * from \norder_items oi inner join inventory.products p\non oi.product_id = p.product_id;\n-- 加上跨数据库名称\n")])])]),t("blockquote",[t("p",[e._v("自连接")])]),e._v(" "),t("div",{staticClass:"language-mysql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("select * from employees e inner jion employees m \non e.reports_to = m.employee_id;\n")])])]),t("blockquote",[t("p",[e._v("多张表连接")])]),e._v(" "),t("div",{staticClass:"language-mysql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("select * from \norders o join customers c \non o.customer_id = c.customer_id \njoin order_statuses os \non o.status = os.order_status_id;\n")])])]),t("blockquote",[t("p",[e._v("复合连接条件")])]),e._v(" "),t("div",{staticClass:"language-mysql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("select *\nfrom order_items oi\njoin order_item_notes oin\n\ton oi.order_id = oin.order_id\n\tand oi.product_id = oin.product_id;\n")])])]),t("blockquote",[t("p",[e._v("隐式连接语法")])]),e._v(" "),t("div",{staticClass:"language-mysql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("select * \nfrom orders o,customers c\nwhere o.customer_id = c.customer_id;\n")])])]),t("h3",{attrs:{id:"外连接"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#外连接"}},[e._v("#")]),e._v(" 外连接")]),e._v(" "),t("blockquote",[t("p",[e._v("右外连接")])]),e._v(" "),t("div",{staticClass:"language-mysql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("select * \nfrom orders o \nright join customers c \non c.customer_id = o.customer_id\n")])])]),t("blockquote",[t("p",[e._v("左外连接")])]),e._v(" "),t("div",{staticClass:"language-mysql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("select * \nfrom customers c\nright join orders o \non c.customer_id = o.customer_id\n")])])]),t("blockquote",[t("p",[e._v("using")])]),e._v(" "),t("div",{staticClass:"language-mysql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("select *\nfrom orders o\njoin customers c\n\tusing(customer_id)\nleft join shippers sh\n\tusing(shipper_id)\n-- 两张表连接字段相同时可以用using简写\n-- using(order_id,product_id)\n")])])]),t("blockquote",[t("p",[e._v("交叉连接")])]),e._v(" "),t("p",[e._v("两张表的每一行都和另一张表的每一行连接，比如两张表各有10条数据，交叉结果就有100条")]),e._v(" "),t("div",{staticClass:"language-mysql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("select * \nfrom color c\ncross join model m;-- 显式写法\n\nselect *\nfrom color c,model m;-- 隐式写法\n")])])]),t("blockquote",[t("p",[e._v("联合")])]),e._v(" "),t("div",{staticClass:"language-mysql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("select * ,'Active' as status\nfrom orders \nwhere order_date >= '2020-01-01'\nunion\nselect *,'Archived' as status\nfrom orders\nwhere order_date < '2020-01-01'\n-- 第一个查询列名作为结果列名\n")])])]),t("h2",{attrs:{id:"插入-更新-删除"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#插入-更新-删除"}},[e._v("#")]),e._v(" 插入，更新，删除")]),e._v(" "),t("h3",{attrs:{id:"插入"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#插入"}},[e._v("#")]),e._v(" 插入")]),e._v(" "),t("blockquote",[t("p",[e._v("插入单行")])]),e._v(" "),t("div",{staticClass:"language-mysql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("insert into customers\nvalues (default,'John','Smith','1996-01-01',null,'address','city','CA',default);\n-- default 表示使用默认值\ninsert into customers\n(first_name,last_name,birth_date,address,city,state)\nvalues ('John','Smith','1996-01-01','address','city','CA');\n")])])]),t("blockquote",[t("p",[e._v("插入多行")])]),e._v(" "),t("div",{staticClass:"language-mysql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("insert into shippers (name) values ('shipper1'),('shipper2'),('shipper3')\n")])])]),t("blockquote",[t("p",[e._v("插入分层")])]),e._v(" "),t("div",{staticClass:"language-mysql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("insert into orders (customer_id,order_date,status) values (1,'2020-01-01',1);\ninsert into order_items values (LAST_INSERT_ID(),1,1,2.95),(LAST_INSERT_ID(),2,1,3.95);\n-- LAST_INSERT_ID()获取数据库上次插入数据的id\n")])])]),t("blockquote",[t("p",[e._v("复制表")])]),e._v(" "),t("div",{staticClass:"language-mysql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("create table orders_cp as select * from orders; -- 复制创建表，创建的表会忽略主键等结构\ninsert into orders_cp select * from orders; -- 复制表数据\n")])])]),t("blockquote",[t("p",[e._v("更新")])]),e._v(" "),t("div",{staticClass:"language-mysql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("update invoices\nset payment_total=10,payment_date='2020-01-01'\nwhere invoice_id=1;\n")])])]),t("blockquote",[t("p",[e._v("删除行")])]),e._v(" "),t("div",{staticClass:"language-mysql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("delete from invoices where invoice_id = 1;\n")])])]),t("h2",{attrs:{id:"聚合函数"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#聚合函数"}},[e._v("#")]),e._v(" 聚合函数")]),e._v(" "),t("blockquote",[t("p",[e._v("MAX")])]),e._v(" "),t("div",{staticClass:"language-mysql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("select \n\tmax(invoice_total) as highest,\n\tmin(invoice_total) as lowest,\n\tavg(invoice_total) as average,\n\tsum(invoice_total * 1.1) as total,\n\tcount(invoice_total) as number_of_invoices, -- 统计非空个数\n\tcount(distinct client_id) as total_records -- 统计非重复，非空的client_id个数\n\tcount(*) as total -- 统计查询总条数\nfrom invoices;\n")])])]),t("blockquote",[t("p",[e._v("分组")])]),e._v(" "),t("div",{staticClass:"language-mysql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("select \n\tclient_id,\n\tsum(invoice_total) as total_sales\nfrom invoices\nwhere invoice_date >= '2020-01-01'\ngroup by client_id\norder by total_sales desc;\n")])])]),t("blockquote",[t("p",[e._v("数据筛选")])]),e._v(" "),t("div",{staticClass:"language-mysql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("select\n\tclient_id,\n\tsum(invoice_total) as total_sales,\n\tcount(*) as number_of_invoices\nfrom invoices\ngroup by clent_id\nhaving total_sales > 500 and number_of_invoices > 5;\n-- having 只能使用查询出来的数据进行过滤\n")])])]),t("blockquote",[t("p",[e._v("rollup运算符")])]),e._v(" "),t("div",{staticClass:"language-mysql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("select\n\tstate,\n\tcity,\n\tsum(invoice_total) as total_sales\nfrom invoices i\njoin clients c using(client_id)\ngroup by state,city with rollup;\n-- 对多个字段分组，会得到每个组和整个结果集的汇总\n")])])]),t("h2",{attrs:{id:"复杂查询"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#复杂查询"}},[e._v("#")]),e._v(" 复杂查询")]),e._v(" "),t("blockquote",[t("p",[e._v("子查询")])]),e._v(" "),t("div",{staticClass:"language-mysql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("select * \nfrom employees\nwhere salary > (\n\tselect avg(salary)\n    from employees\n)\n")])])]),t("blockquote",[t("p",[e._v("in运算符")])]),e._v(" "),t("div",{staticClass:"language-mysql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("select * \nfrom products\nwhere product_id not in (\n\tselect distinct product_id\n    from order_items\n)\n")])])]),t("blockquote",[t("p",[e._v("子查询 vs 连接")])]),e._v(" "),t("div",{staticClass:"language-mysql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("select *\nfrom clients\nwhere client_id not in(\n\tselect distinct client_id\n    from invoices\n);\n\nselect *\nfrom clients\nleft join invoices using(client_id)\nwhere invoice_id is null;\n")])])]),t("blockquote",[t("p",[e._v("all关键字")])]),e._v(" "),t("div",{staticClass:"language-mysql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("select *\nfrom invoices\nwhere invoice_total > all (\n\tselect invoice_total\n    from invoices\n    where client_id = 3\n);\n")])])]),t("blockquote",[t("p",[e._v("any关键字")])]),e._v(" "),t("div",{staticClass:"language-mysql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("select *\nfrom clients\nwhere client_id = any(\n\tselect client_id\n    from invoices\n    group by client_id\n    having count(*) >= 2\n);\n-- = any 等效与 in\n")])])]),t("blockquote",[t("p",[e._v("相关子查询")])]),e._v(" "),t("div",{staticClass:"language-mysql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("select *\nfrom employeess e\nwhere salary > (\n\tselect avg(salary)\n    from employees\n    where office_id = e.office_id\n);\n-- 查询同一部门工资大于平均值的员工\n")])])]),t("blockquote",[t("p",[e._v("exists")])]),e._v(" "),t("div",{staticClass:"language-mysql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("select *\nfrom clients c\nwhere exists (\n\tselect client_id\n    from invoices\n    where client_id = c.client_id\n)\n")])])]),t("blockquote",[t("p",[e._v("select中的子查询")])]),e._v(" "),t("div",{staticClass:"language-mysql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("select \n\tinvoice_id,\n\tinvoice_total,\n\t(select avg(invoice_total) from invoices) as invoice_average,\n\tinvoice_total - (select invoice_average) as difference\nfrom invoices;\n")])])]),t("blockquote",[t("p",[e._v("from中的子查询")])]),e._v(" "),t("div",{staticClass:"language-mysql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("select *\nfrom (\n    select \n        invoice_id,\n        invoice_total,\n        (select avg(invoice_total) from invoices) as invoice_average,\n        invoice_total - (select invoice_average) as difference\n    from invoices\n) as temp\nwhere difference > 0;\n")])])]),t("h2",{attrs:{id:"函数"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#函数"}},[e._v("#")]),e._v(" 函数")]),e._v(" "),t("blockquote",[t("p",[e._v("数值函数")])]),e._v(" "),t("div",{staticClass:"language-mysql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("select round(5.7345); -- 四舍五入保留整数\nselect round(5.7345,2);-- 四舍五入保留两位小数\nselect ceiling(5.7); -- 返回大于等于的最小整数\nselect floor(5.7); -- 返回小于等于的最大整数\nselect abs(-5.2); -- 绝对值\nselect rand(); -- 0-1之间的随机数\n")])])]),t("blockquote",[t("p",[e._v("字符串函数")])]),e._v(" "),t("div",{staticClass:"language-mysql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("select length('sky'); -- 返回长度\nselect upper('sky'); -- 返回大写\nselect lower('SKY'); -- 返回小写\nSELECT LTRIM('   sky'); -- 去除左边空格\nSELECT RTRIM('sky   '); -- 去除右边空格\nSELECT TRIM('   sky  '); -- 去除两边空格\nSELECT LEFT('Kinder',4); -- 获取左边4个字符\nSELECT RIGHT('Kinder',4); -- 获取右边4个字符\nSELECT SUBSTRING('kindergarten',3,5); -- 截取指定区间字符串，从3开始的5位，不写5截取后面全部\nSELECT LOCATE('ind','kindergarten'); -- 返回字符第一次出现位置，没有返回0\nSELECT REPLACE('kindergarten','garten','garden'); -- 替换指定字符串\nSELECT CONCAT('jiang',' ','di'); -- 拼接字符串\n")])])]),t("blockquote",[t("p",[e._v("日期函数")])]),e._v(" "),t("div",{staticClass:"language-mysql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("SELECT NOW();-- 当前时间\nSELECT CURDATE(); -- 当前日期\nSELECT CURTIME(); -- 当前时间\nSELECT YEAR(NOW()); -- 当前年\nSELECT MONTH(NOW());\nSELECT DAY(NOW());\nSELECT HOUR(NOW());\nSELECT SECOND(NOW());\nSELECT DAYNAME(NOW()); -- 当前日名称\nSELECT EXTRACT(DAY from now()); -- 当前日期 extract函数是sql标准函数，最好使用它\nSELECT EXTRACT(YEAR from now());\n")])])]),t("blockquote",[t("p",[e._v("格式化日期和时间")])]),e._v(" "),t("div",{staticClass:"language-mysql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("SELECT DATE_FORMAT(NOW(),'%M %d %Y'); -- 日期格式化\nSELECT TIME_FORMAT(NOW(),'%H:%i %p'); -- 时间格式化\n")])])]),t("blockquote",[t("p",[e._v("计算日期和时间")])]),e._v(" "),t("div",{staticClass:"language-mysql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("SELECT DATE_ADD(NOW(),INTERVAL 1 DAY); -- 日期加一天\nSELECT DATE_ADD(NOW(),INTERVAL 1 YEAR); -- 加一年\nSELECT DATE_SUB(NOW(),INTERVAL 2 DAY); -- 减一天\nSELECT DATEDIFF('2020-01-01','2019-12-01'); -- 计算两个日期之间天数\nSELECT TIMEDIFF('09:00','10:00'); -- 计算两个时间之间秒 \nSELECT TIME_TO_SEC('9:00')-SELECT TIME_TO_SEC('9:02'); -- 返回距离0点的秒求差\n")])])]),t("blockquote",[t("p",[e._v("IFNULL  coalesce")])]),e._v(" "),t("div",{staticClass:"language-mysql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("select\n\torder_id,\n\tifnull(shipper_id,'Not assigned') as shipper -- 如果为空返回替代值\n\tcoalesce(shipper_id,comments,'Not assigned') as shipper -- 返回第一个非空\nfrom orders;\n")])])]),t("blockquote",[t("p",[e._v("if")])]),e._v(" "),t("div",{staticClass:"language-mysql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("select \n\torder_id,\n\torder_date,\n\tif(\n        YEAR(order_date) = YEAR(NOW()),\n        'Active',\n        'Archived'\n    ) as catefory\nfrom orders;\n-- 单项匹配\n")])])]),t("blockquote",[t("p",[e._v("case")])]),e._v(" "),t("div",{staticClass:"language-mysql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("select \n\torder_id,\n\tcase \n\t\twhen YEAR(order_date) = YEAR(NOW()) then 'Active'\n\t\twhen YEAR(order_date) = YEAR(NOW())-1 then 'Last Year'\n\t\twhen YEAR(order_date) < YEAR(NOW())-1 then 'Archived'\n\t\telse 'Future'\n    end as catefory\nfrom orders;\n-- 多项匹配\n")])])]),t("h2",{attrs:{id:"视图"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#视图"}},[e._v("#")]),e._v(" 视图")]),e._v(" "),t("blockquote",[t("p",[e._v("创建视图")])]),e._v(" "),t("div",{staticClass:"language-mysql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("create view sales_by_client as\nselect\n\tc.client_id,\n\tc.name,\n\tsum(invoice_total) as total_sales\nfrom clients c\njoin invoices i using(client_id)\ngroup by client_id,name\n")])])]),t("blockquote",[t("p",[e._v("修改视图")])]),e._v(" "),t("div",{staticClass:"language-mysql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("drop view sales_by_client; -- 删除后重新创建\ncreate or replace view sales_by_client as -- 创建或者替换语句\n")])])]),t("blockquote",[t("p",[e._v("可更新视图")])]),e._v(" "),t("div",{staticClass:"language-mysql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("视图中没有\n-- distinct\n-- aggregate functions\n-- group by / having\n-- union\n等，可以更新数据\n")])])]),t("blockquote",[t("p",[e._v("with check option")])]),e._v(" "),t("div",{staticClass:"language-mysql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("-- 视图最后加上with check option，当更新视图可能造成数据消失时，执行会报错防止数据消失\n")])])]),t("h2",{attrs:{id:"存储过程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#存储过程"}},[e._v("#")]),e._v(" 存储过程")]),e._v(" "),t("blockquote",[t("p",[e._v("创建存储过程")])]),e._v(" "),t("div",{staticClass:"language-mysql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("delimiter $$ -- 更改结束字符\nCREATE PROCEDURE get_user()\nBEGIN\n\tSELECT * FROM user;\nEND$$\ndelimiter ; -- 更改结束字符\n")])])]),t("blockquote",[t("p",[e._v("删除存储过程")])]),e._v(" "),t("div",{staticClass:"language-mysql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("DROP procedure if exists get_user_new;\n")])])]),t("blockquote",[t("p",[e._v("带参数")])]),e._v(" "),t("div",{staticClass:"language-mysql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("CREATE PROCEDURE get_user(pName CHAR (10))\nBEGIN\n\tif pName is null \n\tthen set pName = '姜';\n\tend IF ;\n\tSELECT\n\t\t*\n\tFROM\n\tuser\n\tWHERE\n\t\tNAME LIKE CONCAT( '%', pName, '%' );\nEND\n")])])]),t("blockquote",[t("p",[e._v("参数验证")])]),e._v(" "),t("div",{staticClass:"language-mysql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("CREATE PROCEDURE set_name(PId int,PName varchar(10))\nBEGIN\n\tif pName = '张三' then\n\tsignal sqlstate '22003'\n\tset MESSAGE_TEXT = '不能输入张三';\n\tend if;\n\tINSERT into user values\n\t(Pid,PName);\nEND\n")])])]),t("blockquote",[t("p",[e._v("输出参数")])]),e._v(" "),t("div",{staticClass:"language-mysql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("CREATE PROCEDURE get_user_name(\npId int ,\nout pName varchar(10)\n)\nBEGIN\n\tSELECT name into pName FROM user WHERE id = pId;\nEND\n\nset @name = '';\nCALL get_user_name(01,@name);\nSELECT @name as name;\n")])])]),t("blockquote",[t("p",[e._v("过程本地变量")])]),e._v(" "),t("div",{staticClass:"language-mysql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("CREATE PROCEDURE mylsaber.get_all_name()\nBEGIN\n\tdeclare localName varchar(100) default '';\n\tSELECT name into localName from user WHERE id = 1;\n\tset localName = CONCAT(localName,'pro') ;\n\tSELECT localName;\nEND\n")])])]),t("h2",{attrs:{id:"函数-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#函数-2"}},[e._v("#")]),e._v(" 函数")]),e._v(" "),t("p",[e._v("只能返回单一值，不能像过程一样返回多行多列数据")]),e._v(" "),t("div",{staticClass:"language-mysql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("CREATE FUNCTION mylsaber.get_name(pId int)\nRETURNS varchar(100)\ndeterministic -- 不读取或者改变数据库数据时添加，比如实现绝对值函数\nreads sql data -- 读取数据库数据时添加\nmodifies sql data -- 修改数据库值时添加\nBEGIN\n\tdeclare res varchar(100);\n\tSELECT name into res from user where id = pId;\n\treturn res;\nEND\n\ndrop function if exists get_name;\n")])])]),t("h2",{attrs:{id:"触发器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#触发器"}},[e._v("#")]),e._v(" 触发器")]),e._v(" "),t("div",{staticClass:"language-mysql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("DELIMITER $$\n\nCREATE trigger user_after_insert\nafter INSERT on `user` FOR EACH ROW \nBEGIN \n\tinsert into color values (default, NEW.name ,CONCAT(NEW.name,'触发器'));\nEND$$\n\nDELIMITER ;\n")])])]),t("blockquote",[t("p",[e._v("查看触发器")])]),e._v(" "),t("div",{staticClass:"language-mysql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("show triggers like 'user%';\nshow triggers;\n")])])]),t("blockquote",[t("p",[e._v("删除触发器")])]),e._v(" "),t("div",{staticClass:"language-mysql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("drop trigger if exists user_after_insert;\n")])])]),t("h2",{attrs:{id:"事务"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#事务"}},[e._v("#")]),e._v(" 事务")]),e._v(" "),t("p",[e._v("事务的四大特性ACID：原子性、一致性、隔离性、持久性")]),e._v(" "),t("p",[e._v("事务可能会产生的问题：")]),e._v(" "),t("ul",[t("li",[t("p",[e._v("脏读")]),e._v(" "),t("p",[e._v("所谓脏读，就是指"),t("strong",[e._v("事务A读到了事务B还没有提交的数据")])])]),e._v(" "),t("li",[t("p",[e._v("不可重复读")]),e._v(" "),t("p",[e._v("就是指"),t("strong",[e._v("在同一个事务中读取了两次某个数据，读出来的数据不一致")])])]),e._v(" "),t("li",[t("p",[e._v("幻读")]),e._v(" "),t("p",[e._v("是指"),t("strong",[e._v("在一个事务里面的操作中发现了未被操作的数据")]),e._v("。比如学生信息，事务A开启事务--\x3e修改所有学生当天签到状况为false，此时切换到事务B，事务B开启事务--\x3e事务B插入了一条学生数据，此时切换回事务A，事务A提交的时候发现了一条自己没有修改过的数据，这就是幻读，就好像发生了幻觉一样。幻读出现的前提是并发的事务中有事务发生了插入、删除操作。")])])]),e._v(" "),t("p",[e._v("事务的隔离级别：MySQL默认可重复读")]),e._v(" "),t("ul",[t("li",[e._v("read_uncommitted：读取未提交")]),e._v(" "),t("li",[e._v("read_committed：读取已提交")]),e._v(" "),t("li",[e._v("repeatable_read：可重复读")]),e._v(" "),t("li",[e._v("serializable：串行化")])]),e._v(" "),t("blockquote",[t("p",[e._v("创建事务")])]),e._v(" "),t("div",{staticClass:"language-mysql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("start transaction; # 开启事务\nINSERT INTO mylsaber.`user` (name) VALUES('姓名1');\nINSERT INTO mylsaber.`user` (name) VALUES('姓名2');\ncommit; # 提交事务\nrollback; # 退回事务\n")])])]),t("blockquote",[t("p",[e._v("查看设置事务级别")])]),e._v(" "),t("div",{staticClass:"language-mysql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("show variables like 'transaction_isolation';\n# 查看事务级别\nset SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED ;\n# 设置当前连接事务基本，断开后恢复默认\nset GLOBAL TRANSACTION ISOLATION LEVEL SERIALIZABLE ;\n# 设置数据库全局事务级别\n")])])]),t("h2",{attrs:{id:"数据类型"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#数据类型"}},[e._v("#")]),e._v(" 数据类型")]),e._v(" "),t("h3",{attrs:{id:"字符串类型"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#字符串类型"}},[e._v("#")]),e._v(" 字符串类型")]),e._v(" "),t("ul",[t("li",[e._v("char：固定长度字符串")]),e._v(" "),t("li",[e._v("varchar：可变长度字符串、最大65535位、64kb")]),e._v(" "),t("li",[e._v("mediumtext：最大16mb")]),e._v(" "),t("li",[e._v("longtext：最大4GB")]),e._v(" "),t("li",[e._v("tinytext：最大255bytes")]),e._v(" "),t("li",[e._v("text：最大64kb，和varchar一样")])]),e._v(" "),t("h3",{attrs:{id:"整数类型"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#整数类型"}},[e._v("#")]),e._v(" 整数类型")]),e._v(" "),t("ul",[t("li",[e._v("tinyint：1b")]),e._v(" "),t("li",[e._v("unsigned tinyint：1b")]),e._v(" "),t("li",[e._v("smallint：2b")]),e._v(" "),t("li",[e._v("mediumint：3b")]),e._v(" "),t("li",[e._v("int：4b")]),e._v(" "),t("li",[e._v("bigint：8b")])]),e._v(" "),t("h3",{attrs:{id:"定点数、浮点数"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#定点数、浮点数"}},[e._v("#")]),e._v(" 定点数、浮点数")]),e._v(" "),t("ul",[t("li",[e._v("decimal(p,s)：p决定位数，s决定小数位数、如decimal(9,2) => 1234567.89、decimal可以写成dec，numeric、fixed")]),e._v(" "),t("li",[e._v("float：4b、不能保证精度")]),e._v(" "),t("li",[e._v("double：8b、不能保证精度")])]),e._v(" "),t("h3",{attrs:{id:"布尔类型"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#布尔类型"}},[e._v("#")]),e._v(" 布尔类型")]),e._v(" "),t("ul",[t("li",[e._v("boolean、bool：实际1等效TRUE，0等效FALSE")])]),e._v(" "),t("h3",{attrs:{id:"枚举、集合"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#枚举、集合"}},[e._v("#")]),e._v(" 枚举、集合")]),e._v(" "),t("ul",[t("li",[e._v("enum('small','medium','large')：避免使用")]),e._v(" "),t("li",[e._v("set(...)：和枚举类相识，但可以存多个数据，避免使用")])]),e._v(" "),t("h3",{attrs:{id:"时间日期类型"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#时间日期类型"}},[e._v("#")]),e._v(" 时间日期类型")]),e._v(" "),t("ul",[t("li",[e._v("date：日期")]),e._v(" "),t("li",[e._v("time：时间")]),e._v(" "),t("li",[e._v("datetime：日期时间、8b")]),e._v(" "),t("li",[e._v("timestamp：日期时间、4b（up to 2038）")]),e._v(" "),t("li",[e._v("year：年")])]),e._v(" "),t("h3",{attrs:{id:"blob类型"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#blob类型"}},[e._v("#")]),e._v(" blob类型")]),e._v(" "),t("p",[e._v("存储大型二进制数据，尽量避免在数据库中存二进制文件，影响数据库性能")]),e._v(" "),t("ul",[t("li",[e._v("tinyblob：255b")]),e._v(" "),t("li",[e._v("blob：65k")]),e._v(" "),t("li",[e._v("mediumblob：16mb")]),e._v(" "),t("li",[e._v("longblob：4GB")])]),e._v(" "),t("h3",{attrs:{id:"json类型"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#json类型"}},[e._v("#")]),e._v(" JSON类型")]),e._v(" "),t("p",[e._v("8版本以上支持")]),e._v(" "),t("blockquote",[t("p",[e._v("设置数据")])]),e._v(" "),t("div",{staticClass:"language-mysql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('update products set properties = \'\n{\n"dimensions":[1,2,3],\n"weight":10,\n"manufacturer":{"name","sony"}\n}\n\'\nwhere product_id = 1;\n')])])]),t("div",{staticClass:"language-mysql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("update products set properties = JSON_OBJECT(\n\t'weight',10,\n    'dimensions':JSON_ARRAY(1,2,3),\n    'manufacturer':JSON_OBJECT('name','sony')\n)\nwhere product_id = 1;\n")])])]),t("div",{staticClass:"language-mysql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("update products set properties = JSON_SET(\n\tproperties,\n    '$.weight':20,\n    '$.age':10\n)\nwhere product_id = 1;\n")])])]),t("div",{staticClass:"language-mysql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("update products set properties = JSON_REMOVE(\n\tproperties,\n    '$.age':10\n)\nwhere product_id = 1;\n")])])]),t("blockquote",[t("p",[e._v("查询数据")])]),e._v(" "),t("div",{staticClass:"language-mysql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("select product_id,JSON_EXTRACT(properties,'$.manufacturer.name') from products where product_id = 1;\n")])])]),t("div",{staticClass:"language-mysql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("select product_id,properties -> '$.dimensions[0]' from products where product_id = 1;\nselect product_id,properties ->> '$.manufacturer.name' from products where product_id = 1;\n# ->>可以去除字符串双引号\n")])])]),t("h2",{attrs:{id:"索引"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#索引"}},[e._v("#")]),e._v(" 索引")]),e._v(" "),t("blockquote",[t("p",[e._v("创建索引")])]),e._v(" "),t("div",{staticClass:"language-mysql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("create index inx_name on user(name);\n")])])]),t("blockquote",[t("p",[e._v("查看索引")])]),e._v(" "),t("div",{staticClass:"language-mysql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("show indexes in user；\n")])])]),t("blockquote",[t("p",[e._v("前缀索引")])]),e._v(" "),t("div",{staticClass:"language-mysql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("create index idx_lastnem on customers (last_name(20))\n# last_name前20位作为索引\n")])])]),t("blockquote",[t("p",[e._v("全文索引")])]),e._v(" "),t("div",{staticClass:"language-mysql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("create fulltext index idx_title_body on posts (title,body)\n\nselect * from posts where match(title,body) against('react real -redux +from');\n# 匹配含有react或者real，必不包含redux，必包含from\n# \"handling a from\"严格匹配字符串\n")])])]),t("blockquote",[t("p",[e._v("复合索引")])]),e._v(" "),t("ul",[t("li",[e._v("频繁使用的索引排在最前面")]),e._v(" "),t("li",[e._v("索引重复率低的排在前面")])]),e._v(" "),t("div",{staticClass:"language-mysql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("create index idx_state_points on customers (state,points);\n# 最多复合16个\ndrop index idx_state on customers;\n")])])]),t("h2",{attrs:{id:"数据库权限"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#数据库权限"}},[e._v("#")]),e._v(" 数据库权限")]),e._v(" "),t("div",{staticClass:"language-mysql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("CREATE user john@127.0.0.1 identified by '1234';\ncreate user john identified by '1234';\n-- 创建用户\nSELECT * FROM mysql.`user` u ;\n-- 查询用户\nDROP user john;\n-- 删除用户\nset PASSWORD FOR john = '123456';\n-- 更改用户密码\nset PASSWORD = '123456';\n-- 更改当前登录用户密码\ngrant SELECT ,INSERT ,UPDATE , DELETE, EXECUTE on mylsaber.* to john;\n-- 授权\nSHOW GRANTS FOR john;\nshow grants;\n-- 查看权限\nrevoke CREATE VIEW on mylsaber.* from john;\n-- 撤销权限\n")])])])])}),[],!1,null,null,null);t.default=n.exports}}]);