(window.webpackJsonp=window.webpackJsonp||[]).push([[63],{333:function(t,s,a){"use strict";a.r(s);var n=a(13),e=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"_1-概述"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-概述"}},[t._v("#")]),t._v(" 1 概述")]),t._v(" "),s("p",[t._v("Pod是一组容器的集合（Pod就像是豌豆荚，容器就是豌豆荚中的豌豆）。这些容器共享存储、网络。实际开发中，我们一般不直接创建Pod，而是创建一个工作负载（例如：Deployment）来创建Pod。")]),t._v(" "),s("h2",{attrs:{id:"_2-pod的定义"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-pod的定义"}},[t._v("#")]),t._v(" 2 Pod的定义")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1     "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#必选，版本号，例如v1")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Pod       　 "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#必选，资源类型，例如 Pod")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("       　 "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#必选，元数据")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" string     "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#必选，Pod名称")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("namespace")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" string  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#Pod所属的命名空间,默认为"default"')]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("labels")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("       　　  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#自定义标签列表")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" string      　          \n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#必选，Pod中容器的详细定义")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containers")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#必选，Pod中容器列表")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" string   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#必选，容器名称")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" string  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#必选，容器的镜像名称")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("imagePullPolicy")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" Always"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("|")]),t._v("Never"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("|")]),t._v("IfNotPresent "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#获取镜像的策略 ")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("command")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("string"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#容器的启动命令列表，如不指定，使用打包时使用的启动命令")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("args")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("string"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#容器的启动命令参数列表")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("workingDir")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" string  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#容器的工作目录")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("volumeMounts")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("       "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#挂载到容器内部的存储卷配置")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" string      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#引用pod定义的共享存储卷的名称，需用volumes[]部分定义的的卷名")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("mountPath")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" string "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#存储卷在容器内mount的绝对路径，应少于512字符")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("readOnly")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" boolean "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#是否为只读模式")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ports")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#需要暴露的端口库号列表")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" string        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#端口的名称")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containerPort")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" int  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#容器需要监听的端口号")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("hostPort")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" int       "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#容器所在主机需要监听的端口号，默认与Container相同")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("protocol")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" string    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#端口协议，支持TCP和UDP，默认TCP")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("env")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#容器运行前需设置的环境变量列表")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" string  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#环境变量名称")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("value")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" string "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#环境变量的值")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("resources")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#资源限制和请求的设置")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("limits")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#资源限制的设置")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("cpu")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" string     "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#Cpu的限制，单位为core数，将用于docker run --cpu-shares参数")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("memory")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" string  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#内存限制，单位可以为Mib/Gib，将用于docker run --memory参数")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("requests")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#资源请求的设置")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("cpu")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" string    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#Cpu请求，容器启动的初始可用数量")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("memory")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" string "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#内存请求,容器启动的初始可用数量")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("lifecycle")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#生命周期钩子")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("postStart")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#容器启动后立即执行此钩子,如果执行失败,会根据重启策略进行重启")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("preStop")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#容器终止前执行此钩子,无论结果如何,容器都会终止")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("livenessProbe")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#对Pod内各容器健康检查的设置，当探测无响应几次后将自动重启该容器")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("exec")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("       　 "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#对Pod容器内检查方式设置为exec方式")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("command")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("string"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#exec方式需要制定的命令或脚本")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("httpGet")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("       "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#对Pod内个容器健康检查方法设置为HttpGet，需要制定Path、port")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("path")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" string\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("port")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" number\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("host")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" string\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("scheme")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" string\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("HttpHeaders")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" string\n          "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("value")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" string\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("tcpSocket")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("     "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#对Pod内个容器健康检查方式设置为tcpSocket方式")]),t._v("\n         "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("port")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" number\n       "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("initialDelaySeconds")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("       "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#容器启动完成后首次探测的时间，单位为秒")]),t._v("\n       "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("timeoutSeconds")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 0    　　    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#对容器健康检查探测等待响应的超时时间，单位秒，默认1秒")]),t._v("\n       "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("periodSeconds")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 0     　　    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#对容器监控检查的定期探测时间设置，单位秒，默认10秒一次")]),t._v("\n       "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("successThreshold")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n       "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("failureThreshold")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n       "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("securityContext")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n         "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("privileged")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("false")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("restartPolicy")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("Always "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("|")]),t._v(" Never "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("|")]),t._v(" OnFailure"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#Pod的重启策略")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("nodeName")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" <string"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#设置NodeName表示将该Pod调度到指定到名称的node节点上")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("nodeSelector")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" obeject "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#设置NodeSelector表示将该Pod调度到包含这个label的node上")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("imagePullSecrets")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#Pull镜像时使用的secret名称，以key：secretkey格式指定")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" string\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("hostNetwork")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("false")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#是否使用主机网络模式，默认为false，如果设置为true，表示使用宿主机网络")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("volumes")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#在该pod上定义共享存储卷列表")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" string    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#共享存储卷名称 （volumes类型有很多种）")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("emptyDir")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("       "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#类型为emtyDir的存储卷，与Pod同生命周期的一个临时目录。为空值")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("hostPath")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" string   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#类型为hostPath的存储卷，表示挂载Pod所在宿主机的目录")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("path")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" string      　　        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#Pod所在宿主机的目录，将被用于同期中mount的目录")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("secret")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("       　　　"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#类型为secret的存储卷，挂载集群与定义的secret对象到容器内部")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("scretname")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" string  \n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("items")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("     \n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("key")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" string\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("path")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" string\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("configMap")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("         "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#类型为configMap的存储卷，挂载预定义的configMap对象到容器内部")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" string\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("items")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("key")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" string\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("path")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" string\n")])])]),s("p",[t._v("我们可以使用"),s("code",[t._v("explain")]),t._v("查看每种资源的可配置项：")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl explain 资源类型")]),t._v("\nkubectl explain pod\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl explain 资源类型.属性")]),t._v("\nkubectl explain pod.metadata\n")])])]),s("h2",{attrs:{id:"_3-pod的配置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-pod的配置"}},[t._v("#")]),t._v(" 3 Pod的配置")]),t._v(" "),s("p",[t._v("pod.spec.containers属性是pod配置中最关键的一项配置。使用"),s("code",[t._v("kubectl explain pod.spec.containers")]),t._v("查看可选配置项。")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 返回的重要属性")]),t._v("\nKIND:     Pod\nVERSION:  v1\nRESOURCE: containers "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("Object"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 数组，代表可以有多个容器")]),t._v("\nFIELDS:\n  name  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("string"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("     "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 容器名称")]),t._v("\n  image "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("string"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("     "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 容器需要的镜像地址")]),t._v("\n  imagePullPolicy  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("string"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 镜像拉取策略 ")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("command")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("string"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 容器的启动命令列表，如不指定，使用打包时使用的启动命令")]),t._v("\n  args   "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("string"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 容器的启动命令需要的参数列表 ")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("env")]),t._v("    "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("Object"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 容器环境变量的配置")]),t._v("\n  ports  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("Object"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 容器需要暴露的端口号列表")]),t._v("\n  resources "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Object"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 资源限制和资源请求的设置")]),t._v("\n")])])]),s("h3",{attrs:{id:"_3-1-基本配置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-基本配置"}},[t._v("#")]),t._v(" 3.1 基本配置")]),t._v(" "),s("ol",[s("li",[t._v("创建pod-base.yaml文件")])]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Pod\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" pod"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("base\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("namespace")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" dev\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("labels")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("user")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" xudaxian\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containers")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 容器名称")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("1.17.1 "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 容器需要的镜像地址")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" busybox "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 容器名称")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" busybox"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.30")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 容器需要的镜像地址")]),t._v("\n")])])]),s("ol",{attrs:{start:"2"}},[s("li",[t._v("创建Pod：")])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("kubectl apply "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-f")]),t._v(" pod-base.yaml\n")])])]),s("ol",{attrs:{start:"3"}},[s("li",[t._v("查看pod状态：")])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("kubectl get pod "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-n")]),t._v(" dev\n")])])]),s("ol",{attrs:{start:"4"}},[s("li",[t._v("通过describe查看内部详情：")])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("kubectl describe pod -pod-base "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-n")]),t._v(" dev\n")])])]),s("h3",{attrs:{id:"_3-2-镜像拉取策略"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-镜像拉取策略"}},[t._v("#")]),t._v(" 3.2 镜像拉取策略")]),t._v(" "),s("ol",[s("li",[t._v("创建pod-imagepullpolicy.yaml文件：")])]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Pod\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" pod"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("imagepullpolicy\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("namespace")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" dev\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("labels")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("user")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" xudaxian\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containers")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 容器名称")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("1.17.1 "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 容器需要的镜像地址")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("imagePullPolicy")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Always "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 用于设置镜像的拉取策略")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" busybox "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 容器名称")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" busybox"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.30")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 容器需要的镜像地址")]),t._v("\n")])])]),s("p",[t._v("imagePullPolicy设置镜像拉取策略：")]),t._v(" "),s("ul",[s("li",[t._v("Always：总是从远程仓库拉取镜像")]),t._v(" "),s("li",[t._v("ifNotPresent：本地有则使用本地，没有就拉取远程")]),t._v(" "),s("li",[t._v("Never：只使用本地镜像")])]),t._v(" "),s("h3",{attrs:{id:"_3-3-启动命令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-启动命令"}},[t._v("#")]),t._v(" 3.3 启动命令")]),t._v(" "),s("ol",[s("li",[t._v("创建pod-command.yaml文件：")])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("apiVersion: v1\nkind: Pod\nmetadata:\n  name: pod-command\n  namespace: dev\n  labels:\n    user: xudaxian\nspec:\n  containers:\n    - name: nginx "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 容器名称")]),t._v("\n      image: nginx:1.17.1 "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 容器需要的镜像地址")]),t._v("\n      imagePullPolicy: IfNotPresent "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 设置镜像拉取策略")]),t._v("\n    - name: busybox "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 容器名称")]),t._v("\n      image: busybox:1.30 "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 容器需要的镜像地址")]),t._v("\n      command: "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/bin/sh"')]),t._v(","),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"-c"')]),t._v(","),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"touch /tmp/hello.txt;while true;do /bin/echo '),s("span",{pre:!0,attrs:{class:"token variable"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("date")]),t._v(" +%T"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v(")")])]),t._v(' >> /tmp/hello.txt;sleep 3;done;"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),s("ol",{attrs:{start:"2"}},[s("li",[t._v("进入Pod中的busybox容器，查看文件内容：")])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 在容器中执行命令")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl exec -it pod的名称 -n 命名空间 -c 容器名称 /bin/sh")]),t._v("\nkubectl "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("exec")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-it")]),t._v(" pod-command "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-n")]),t._v(" dev "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-c")]),t._v(" busybox /bin/sh\n")])])]),s("h3",{attrs:{id:"_3-4-环境变量"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-4-环境变量"}},[t._v("#")]),t._v(" 3.4 环境变量")]),t._v(" "),s("p",[t._v("不推荐环境变量方法，推荐将这些配置单独存储在配置文件中。")]),t._v(" "),s("ol",[s("li",[t._v("创建pod-evn.yaml文件：")])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("apiVersion: v1\nkind: Pod\nmetadata:\n  name: pod-env\n  namespace: dev\n  labels:\n    user: xudaxian\nspec:\n  containers:\n    - name: nginx "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 容器名称")]),t._v("\n      image: nginx:1.17.1 "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 容器需要的镜像地址")]),t._v("\n      imagePullPolicy: IfNotPresent "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 设置镜像拉取策略")]),t._v("\n    - name: busybox "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 容器名称")]),t._v("\n      image: busybox:1.30 "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 容器需要的镜像地址")]),t._v("\n      command: "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/bin/sh"')]),t._v(","),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"-c"')]),t._v(","),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"touch /tmp/hello.txt;while true;do /bin/echo '),s("span",{pre:!0,attrs:{class:"token variable"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("date")]),t._v(" +%T"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v(")")])]),t._v(' >> /tmp/hello.txt;sleep 3;done;"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n      env:\n        - name: "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"username"')]),t._v("\n          value: "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"admin"')]),t._v("\n        - name: "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"password"')]),t._v("\n          value: "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"123456"')]),t._v("\n")])])]),s("ol",{attrs:{start:"2"}},[s("li",[t._v("进入容器：")])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("kubectl "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("exec")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-it")]),t._v(" pod-env "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-n")]),t._v(" dev "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-c")]),t._v(" busybox "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-it")]),t._v(" /bin/sh\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$username")]),t._v("\n")])])]),s("h3",{attrs:{id:"_3-5-端口设置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-5-端口设置"}},[t._v("#")]),t._v(" 3.5 端口设置")]),t._v(" "),s("ol",[s("li",[t._v("查看端口支持的子选择")])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("kubectl explain pod.spec.containers.ports\n")])])]),s("ol",{attrs:{start:"2"}},[s("li",[t._v("创建pod-ports.yaml文件：")])]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Pod\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" pod"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("ports\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("namespace")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" dev\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("labels")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("user")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" xudaxian\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containers")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 容器名称")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("1.17.1 "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 容器需要的镜像地址")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("imagePullPolicy")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" IfNotPresent "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 设置镜像拉取策略")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ports")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("port "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 端口名称，如果执行，必须保证name在Pod中是唯一的")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containerPort")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 容器要监听的端口 （0~65536）")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("protocol")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" TCP "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 端口协议")]),t._v("\n")])])]),s("h3",{attrs:{id:"_3-6-资源配额"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-6-资源配额"}},[t._v("#")]),t._v(" 3.6 资源配额")]),t._v(" "),s("p",[t._v("容器中的程序要运行，会占用一定的资源，比如CPU和内存等，Kubernetes提供了对内存和CPU的资源进行配额的机制，这种机制主要通过resources选项实现，它有两个子选择：")]),t._v(" "),s("ul",[s("li",[t._v("limits：用于限制运行容器的最大占用，超过重启。")]),t._v(" "),s("li",[t._v("requests：用于设置需要的最小资源：如果资源不够，容器将无法启动。")])]),t._v(" "),s("ol",[s("li",[t._v("创建pod-resoures.yaml文件：")])]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Pod\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" pod"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("resoures\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("namespace")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" dev\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("labels")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("user")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" xudaxian\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containers")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 容器名称")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("1.17.1 "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 容器需要的镜像地址")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("imagePullPolicy")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" IfNotPresent "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 设置镜像拉取策略")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ports")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 端口设置")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("port "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 端口名称，如果执行，必须保证name在Pod中是唯一的")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containerPort")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 容器要监听的端口 （0~65536）")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("protocol")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" TCP "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 端口协议")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("resources")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 资源配额")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("limits")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 限制资源的上限")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("cpu")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# CPU限制，单位是core数")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("memory")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"10Gi"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 内存限制，可以使用Gi、Mi、G、M等形式。")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("requests")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 限制资源的下限")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("cpu")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# CPU限制，单位是core数 ")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("memory")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"10Mi"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 内存限制，可以使用Gi、Mi、G、M等形式。")]),t._v("\n")])])]),s("p",[t._v("如果将requests.memory的值改为10Gi，启动Pod会失败。使用describe查看详情会发现提示内存不足。")]),t._v(" "),s("h2",{attrs:{id:"_4-pod的生命周期"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-pod的生命周期"}},[t._v("#")]),t._v(" 4 Pod的生命周期")]),t._v(" "),s("h3",{attrs:{id:"_4-1-概述"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-概述"}},[t._v("#")]),t._v(" 4.1 概述")]),t._v(" "),s("p",[t._v("Pod对象从创建到终止的这段时间范围称为Pod的生命周期，主要包含以下过程：")]),t._v(" "),s("ul",[s("li",[t._v("Pod创建过程")]),t._v(" "),s("li",[t._v("运行初始化容器（init container）过程。")]),t._v(" "),s("li",[t._v("运行主容器（main container）：\n"),s("ul",[s("li",[t._v("容器启动后钩子（post start），容器终止前钩子（pre stop）。")]),t._v(" "),s("li",[t._v("容器的存活性探测（liveness probe），就绪性探测（readiness probe）")])])]),t._v(" "),s("li",[t._v("Pod终止过程。")])]),t._v(" "),s("p",[t._v("在整个生命周期中，Pod会出现5种状态（相位）：")]),t._v(" "),s("ul",[s("li",[t._v("挂起（Pending）：API Server已经创建了Pod资源对象，但它尚未被调度完成或者任处于下载镜像的过程中")]),t._v(" "),s("li",[t._v("运行中（Running）：Pod已经被调度到某节点，并且所有容器都已经被kubectl创建完成。")]),t._v(" "),s("li",[t._v("成功（Succeeded）：Pod中所有容器都已经成功终止并且不会被重启。")]),t._v(" "),s("li",[t._v("失败（Failed）：所有容器都已经终止，但至少有一个容器终止失败，即容器返回了非0值的退出状态。")]),t._v(" "),s("li",[t._v("未知（Unknown）：API Server无法正常获取到Pod对象的状态信息，通常由于网络通信失败所导致。")])]),t._v(" "),s("h3",{attrs:{id:"_4-2-创建和终止"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-创建和终止"}},[t._v("#")]),t._v(" 4.2 创建和终止")]),t._v(" "),s("h4",{attrs:{id:"_4-2-1-pod的创建过程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-1-pod的创建过程"}},[t._v("#")]),t._v(" 4.2.1 Pod的创建过程")]),t._v(" "),s("ol",[s("li",[t._v("用户通过kubectl或其他api客户端提交需要创建的Pod信息给API Server。")]),t._v(" "),s("li",[t._v("API Server开始生成Pod对象的信息，并将信息存入etcd，然后返回确认信息给客户端。")]),t._v(" "),s("li",[t._v("API Server开始反映etcd中的Pod对象的变化，其它组件使用watch机制来跟踪检查API Server上的变动。")]),t._v(" "),s("li",[t._v("Scheduler发现有新的Pod对象要创建，开始为Pod分配主机并将结果信息更新至API Server。")]),t._v(" "),s("li",[t._v("Node节点上的kubelet发现有Pod调度过来，尝试调度Docker启动容器，并将结果回送至API Server。")]),t._v(" "),s("li",[t._v("⑥ API Server将接收到的Pod状态信息存入到etcd中。")])]),t._v(" "),s("h4",{attrs:{id:"_4-2-2-pod终止过程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-2-pod终止过程"}},[t._v("#")]),t._v(" 4.2.2 Pod终止过程")]),t._v(" "),s("ol",[s("li",[t._v("用户向API Server发送删除Pod对象的命令。")]),t._v(" "),s("li",[t._v("API Server中的Pod对象信息会随着时间的推移而更新，在宽限期内（默认30s），Pod被视为dead。")]),t._v(" "),s("li",[t._v("将Pod标记为terminating状态。")]),t._v(" "),s("li",[t._v("kubelete在监控到Pod对象转为terminating状态的同时启动Pod关闭过程。")]),t._v(" "),s("li",[t._v("端点控制器监控到Pod对象的关闭行为时将其从所有匹配到此端点的service资源的端点列表中移除。")]),t._v(" "),s("li",[t._v("如果当前Pod对象定义了preStop钩子处理器，则在其标记为terminating后会以同步的方式启动执行。")]),t._v(" "),s("li",[t._v("Pod对象中的容器进程收到停止信号。")]),t._v(" "),s("li",[t._v("宽限期结束后，如果Pod中还存在运行的进程，那么Pod对象会收到立即终止的信号。")]),t._v(" "),s("li",[t._v("kubectl请求API Server将此Pod资源的宽限期设置为0从而完成删除操作，此时Pod对于用户已经不可用了。")])]),t._v(" "),s("h3",{attrs:{id:"_4-3-初始化容器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-初始化容器"}},[t._v("#")]),t._v(" 4.3 初始化容器")]),t._v(" "),s("h4",{attrs:{id:"_4-3-1-概述"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-1-概述"}},[t._v("#")]),t._v(" 4.3.1 概述")]),t._v(" "),s("p",[t._v("初始化容器是在Pod的主容器启动之前要运行的容器，主要是做一些主容器的前置工作，它具有两大特征：")]),t._v(" "),s("ul",[s("li",[t._v("初始化容器必须运行完成直至结束，如果某个初始化容器运行失败，那么kubernetes需要重启它直至成功完成。")]),t._v(" "),s("li",[t._v("初始化容器必须按照定义的顺序执行，当且仅当前一个成功之后，后面的一个才能运行。")])]),t._v(" "),s("p",[t._v("初始化容器有很多的应用场景，下面列出的是最常见的几个：")]),t._v(" "),s("ul",[s("li",[t._v("提供主容器镜像中不具备的工具程序或自定义代码。")]),t._v(" "),s("li",[t._v("初始化容器要先于应用容器串行启动并运行完成，因此可用于延后应用容器的启动直至其依赖的条件得到满足。")])]),t._v(" "),s("p",[t._v("接下来做一个案例，模拟下面这个需求：")]),t._v(" "),s("ul",[s("li",[t._v("假设要以主容器来运行Nginx，但是要求在运行Nginx之前要能够连接上MySQL和Redis所在的服务器。")]),t._v(" "),s("li",[t._v("为了简化测试，事先规定好MySQL和Redis所在的IP地址分别为192.168.18.103和192.168.18.104（注意，这两个IP都不能ping通，因为环境中没有这两个IP）。")])]),t._v(" "),s("h4",{attrs:{id:"_4-3-2-示例"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-2-示例"}},[t._v("#")]),t._v(" 4.3.2 示例")]),t._v(" "),s("ol",[s("li",[t._v("创建pod-initcontainer.yaml文件：")])]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Pod\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" pod"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("initcontainer\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("namespace")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" dev\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("labels")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("user")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" xudaxian\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containers")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 容器配置")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("1.17.1\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("imagePullPolicy")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" IfNotPresent\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ports")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("port\n          "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containerPort")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("protocol")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" TCP\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("resources")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("limits")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("cpu")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2"')]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("memory")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"10Gi"')]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("requests")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("cpu")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1"')]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("memory")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"10Mi"')]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("initContainers")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 初始化容器配置")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" test"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("mysql\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" busybox"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.30")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("command")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"sh"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"-c"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"until ping 192.168.18.103 -c 1;do echo waiting for mysql ...;sleep 2;done;"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("securityContext")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("privileged")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("true")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 使用特权模式运行容器")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" test"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("redis\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" busybox"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.30")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("command")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"sh"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"-c"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"until ping 192.168.18.104 -c 1;do echo waiting for redis ...;sleep 2;done;"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),s("ol",{attrs:{start:"2"}},[s("li",[t._v("查看Pod状态")])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("kubectl describe pod pod-initcontainer "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-n")]),t._v(" dev\n")])])]),s("p",[t._v("可以返现Pod卡在启动的第一个初始化容器过程中，后面的容器不会运行。")]),t._v(" "),s("h3",{attrs:{id:"_4-4-钩子函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-4-钩子函数"}},[t._v("#")]),t._v(" 4.4 钩子函数")]),t._v(" "),s("h4",{attrs:{id:"_4-4-1-概述"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-4-1-概述"}},[t._v("#")]),t._v(" 4.4.1 概述")]),t._v(" "),s("p",[t._v("钩子函数能够感知自身生命周期中的事件，并在相应的时刻到来时运行用户指定的程序代码。\nkubernetes在主容器启动之后和停止之前提供了两个钩子函数：")]),t._v(" "),s("ul",[s("li",[t._v("post start：容器创建之后执行，如果失败会重启容器。")]),t._v(" "),s("li",[t._v("pre stop：容器终止之前执行，执行完成之后容器将成功终止，在其完成之前会阻塞删除容器的操作。")])]),t._v(" "),s("p",[t._v("钩子处理器支持使用下面的三种方式定义动作：")]),t._v(" "),s("ol",[s("li",[t._v("exec命令：在容器内执行一次命令。")])]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[t._v("……\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("lifecycle")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n     "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("postStart")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" \n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("exec")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n           "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("command")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n             "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" cat\n             "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" /tmp/healthy\n……\n")])])]),s("ol",{attrs:{start:"2"}},[s("li",[t._v("tcpSocket：在当前容器尝试访问指定的socket。")])]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[t._v("…… \n   "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("lifecycle")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("postStart")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n         "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("tcpSocket")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("port")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8080")]),t._v("\n……\n")])])]),s("ol",{attrs:{start:"3"}},[s("li",[t._v("httpGet：在当前容器中向某url发起HTTP请求。")])]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[t._v("…… \n   "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("lifecycle")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("postStart")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n         "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("httpGet")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("path")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" / "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#URI地址")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("port")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#端口号")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("host")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 192.168.109.100 "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#主机地址  ")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("scheme")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" HTTP "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#支持的协议，http或者https")]),t._v("\n……\n")])])]),s("h4",{attrs:{id:"_4-4-2-exec方式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-4-2-exec方式"}},[t._v("#")]),t._v(" 4.4.2 exec方式")]),t._v(" "),s("p",[t._v("以exec方式为例，演示下钩子函数的使用。")]),t._v(" "),s("ol",[s("li",[t._v("创建pod-hook-exec.yaml文件")])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("apiVersion: v1\nkind: Pod\nmetadata:\n  name: pod-hook-exec\n  namespace: dev\n  labels:\n    user: xudaxian\nspec:\n  containers: "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 容器配置")]),t._v("\n    - name: nginx\n      image: nginx:1.17.1\n      imagePullPolicy: IfNotPresent\n      ports:\n        - name: nginx-port\n          containerPort: "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),t._v("\n          protocol: TCP\n      resources:\n        limits:\n          cpu: "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2"')]),t._v("\n          memory: "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"10Gi"')]),t._v("\n        requests:\n          cpu: "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1"')]),t._v("\n          memory: "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"10Mi"')]),t._v("\n      lifecycle: "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 生命周期配置")]),t._v("\n        postStart: "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 容器创建之后执行，如果失败会重启容器")]),t._v("\n          exec: "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 在容器启动的时候，执行一条命令，修改掉Nginx的首页内容")]),t._v("\n            command: "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/bin/sh"')]),t._v(","),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"-c"')]),t._v(","),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"echo postStart ... > /usr/share/nginx/html/index.html"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n        preStop: "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 容器终止之前执行，执行完成之后容器将成功终止，在其完成之前会阻塞删除容器的操作")]),t._v("\n          exec: "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 在容器停止之前停止Nginx的服务")]),t._v("\n            command: "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/usr/sbin/nginx"')]),t._v(","),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"-s"')]),t._v(","),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"quit"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),s("ol",{attrs:{start:"2"}},[s("li",[t._v("查看Pod的IP")])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("kubectl get pod pod-hook-exec "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-n")]),t._v(" dev "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-o")]),t._v(" wide\n")])])]),s("ol",{attrs:{start:"3"}},[s("li",[t._v("访问Pod")])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("curl")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10.244")]),t._v(".1.11\n")])])]),s("h3",{attrs:{id:"_4-5-容器探测"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-5-容器探测"}},[t._v("#")]),t._v(" 4.5 容器探测")]),t._v(" "),s("h4",{attrs:{id:"_4-5-1-概述"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-5-1-概述"}},[t._v("#")]),t._v(" 4.5.1 概述")]),t._v(" "),s("p",[t._v("容器探测用于检测容器中的应用实例是否正常工作，是保障业务可用性的一种传统机制。如果经过探测，实例的状态不符合预期，那么kubernetes就会把该问题实例“摘除”，不承担业务流量。kubernetes提供了两种探针来实现容器探测，分别是：")]),t._v(" "),s("ul",[s("li",[t._v("liveness probes：存活性探测，用于检测应用实例当前是否处于正常运行状态，如果不是，k8s会重启容器。")]),t._v(" "),s("li",[t._v("readiness probes：就绪性探测，用于检测应用实例是否可以接受请求，如果不能，k8s不会转发流量。")])]),t._v(" "),s("blockquote",[s("p",[t._v("livenessProbe：存活性探测，决定是否重启容器。\nreadinessProbe：就绪性探测，决定是否将请求转发给容器。")])]),t._v(" "),s("blockquote",[s("p",[t._v("k8s在1.16版本之后新增了startupProbe探针，用于判断容器内应用程序是否已经启动。如果配置了startupProbe探针，就会先禁止其他的探针，直到startupProbe探针成功为止，一旦成功将不再进行探测。")])]),t._v(" "),s("p",[t._v("上面两种探针目前均支持三种探测方式：")]),t._v(" "),s("ol",[s("li",[t._v("exec命令：在容器内执行一次命令，如果命令执行的退出码为0，则认为程序正常，否则不正常。")])]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[t._v("……\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("livenessProbe")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n     "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("exec")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("command")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("\tcat\n          "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("\t/tmp/healthy\n……\n")])])]),s("ol",{attrs:{start:"2"}},[s("li",[t._v("tcpSocket：将会尝试访问一个用户容器的端口，如果能够建立这条连接，则认为程序正常，否则不正常。")])]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[t._v("……\n   "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("livenessProbe")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("tcpSocket")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n         "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("port")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8080")]),t._v("\n……\n")])])]),s("ol",{attrs:{start:"3"}},[s("li",[t._v("httpGet：调用容器内web应用的URL，如果返回的状态码在200和399之前，则认为程序正常，否则不正常。")])]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[t._v("……\n   "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("livenessProbe")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("httpGet")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n         "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("path")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" / "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#URI地址")]),t._v("\n         "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("port")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#端口号")]),t._v("\n         "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("host")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 127.0.0.1 "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#主机地址")]),t._v("\n         "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("scheme")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" HTTP "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#支持的协议，http或者https")]),t._v("\n……\n")])])]),s("h4",{attrs:{id:"_4-5-2-exec方式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-5-2-exec方式"}},[t._v("#")]),t._v(" 4.5.2 exec方式")]),t._v(" "),s("ol",[s("li",[t._v("创建pod-liveness-exec.yaml文件：")])]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Pod\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" pod"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("liveness"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("exec\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("namespace")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" dev\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("labels")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("user")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" xudaxian\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containers")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 容器配置")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("1.17.1\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("imagePullPolicy")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" IfNotPresent\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ports")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("port\n          "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containerPort")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("protocol")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" TCP\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("livenessProbe")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 存活性探针")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("exec")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("command")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/bin/cat"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/tmp/hello.txt"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 执行一个查看文件的命令，必须失败，因为根本没有这个文件")]),t._v("\n")])])]),s("ol",{attrs:{start:"2"}},[s("li",[t._v("查看Pod详情：")])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("kubectl describe pod pod-liveness-exec "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-n")]),t._v(" dev\n")])])]),s("p",[t._v("会报错Liveness Probe failed：没有这个文件或目录。")]),t._v(" "),s("blockquote",[s("ul",[s("li",[t._v("nginx容器启动之后就进行了健康检查。")]),t._v(" "),s("li",[t._v("检查失败之后，容器被kill掉，然后尝试进行重启，这是重启策略的作用。")]),t._v(" "),s("li",[t._v("稍等一会之后，再观察Pod的信息，就会看到RESTARTS不再是0，而是一直增长。")])])]),t._v(" "),s("h4",{attrs:{id:"_4-5-3-容器探测补充"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-5-3-容器探测补充"}},[t._v("#")]),t._v(" 4.5.3 容器探测补充")]),t._v(" "),s("p",[t._v("查看livenessProbe的子属性，会发现除了这三种方式，还有一些其他的配置。")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("kubectl explain pod.spec.containers.livenessProbe\n")])])]),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("FIELDS:\n  "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("exec")]),t._v(" \n  tcpSocket  \n  httpGet    \n  initialDelaySeconds    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 容器启动后等待多少秒执行第一次探测")]),t._v("\n  timeoutSeconds      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 探测超时时间。默认1秒，最小1秒")]),t._v("\n  periodSeconds       "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 执行探测的频率。默认是10秒，最小1秒")]),t._v("\n  failureThreshold    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 连续探测失败多少次才被认定为失败。默认是3。最小值是1")]),t._v("\n  successThreshold    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 连续探测成功多少次才被认定为成功。默认是1")]),t._v("\n")])])]),s("h3",{attrs:{id:"_4-6-重启策略"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-6-重启策略"}},[t._v("#")]),t._v(" 4.6 重启策略")]),t._v(" "),s("h4",{attrs:{id:"_4-6-1-概述"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-6-1-概述"}},[t._v("#")]),t._v(" 4.6.1 概述")]),t._v(" "),s("p",[t._v("在容器探测中，一旦容器探测出现了问题，kubernetes就会对容器所在的Pod进行重启，其实这是由Pod的重启策略决定的，Pod的重启策略有3种，分别如下：")]),t._v(" "),s("ul",[s("li",[t._v("Always：容器失效时，自动重启该容器，默认值。")]),t._v(" "),s("li",[t._v("OnFailure：容器终止运行且退出码不为0时重启。")]),t._v(" "),s("li",[t._v("Never：不论状态如何，都不重启该容器。")])]),t._v(" "),s("p",[t._v("重启策略适用于Pod对象中的所有容器，首次需要重启的容器，将在其需要的时候立即进行重启，随后再次重启的操作将由kubelet延迟一段时间后进行，且反复的重启操作的延迟时长以此为10s、20s、40s、80s、160s和300s，300s是最大的延迟时长。")]),t._v(" "),s("h4",{attrs:{id:"_4-6-2-示例"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-6-2-示例"}},[t._v("#")]),t._v(" 4.6.2 示例")]),t._v(" "),s("ol",[s("li",[t._v("创建pod-restart-policy.yaml文件：")])]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Pod\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" pod"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("restart"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("policy\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("namespace")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" dev\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("labels")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("user")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" xudaxian\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containers")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 容器配置")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("1.17.1\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("imagePullPolicy")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" IfNotPresent\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ports")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("port\n          "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containerPort")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("protocol")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" TCP\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("livenessProbe")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 存活性探测")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("httpGet")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("port")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("path")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" /hello\n          "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("host")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 127.0.0.1\n          "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("scheme")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" HTTP\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("restartPolicy")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Never "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 重启策略")]),t._v("\n")])])]),s("p",[t._v("我们设置了存活性探测访问本地80端口的"),s("code",[t._v("/hello")]),t._v("地址，但是实际上没有这个地址，会访问失败，所以容器会启动失败。多等一会，观察Pod的重试次数，发现一直是0，没有重启。")]),t._v(" "),s("h2",{attrs:{id:"_5-pod的调度"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-pod的调度"}},[t._v("#")]),t._v(" 5 Pod的调度")]),t._v(" "),s("p",[t._v("在默认情况下，一个Pod在哪个Node节点上运行，是由Scheduler组件采用相应的算法计算出来的，这个过程是不受人工控制的。但是在实际使用中，这并不满足需求，因为很多情况下，我们想控制某些Pod到达某些节点上，那么应该怎么做？这就要求了解kubernetes对Pod的调度规则，kubernetes提供了四大类调度方式。")]),t._v(" "),s("ul",[s("li",[t._v("自动调度：运行在哪个Node节点上完全由Scheduler经过一系列的算法计算得出。")]),t._v(" "),s("li",[t._v("定向调度：NodeName、NodeSelector。")]),t._v(" "),s("li",[t._v("亲和性调度：NodeAffinity、PodAffinity、PodAntiAffinity。")]),t._v(" "),s("li",[t._v("污点（容忍）调度：Taints、Toleration。")])]),t._v(" "),s("h3",{attrs:{id:"_5-1-定向调度"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-定向调度"}},[t._v("#")]),t._v(" 5.1 定向调度")]),t._v(" "),s("h4",{attrs:{id:"_5-1-1-概述"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-1-概述"}},[t._v("#")]),t._v(" 5.1.1 概述")]),t._v(" "),s("p",[t._v("定向调度，指的是利用在Pod上声明的nodeName或nodeSelector，以此将Pod调度到期望的Node节点上。注意，这里的调度是强制的，这就意味着即使要调度的目标Node不存在，也会向上面进行调度，只不过Pod运行失败而已。")]),t._v(" "),s("h4",{attrs:{id:"_5-1-2-示例"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-2-示例"}},[t._v("#")]),t._v(" 5.1.2 示例")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Pod\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" pod"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("nodename\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("namespace")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" dev\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("labels")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("user")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" xudaxian\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containers")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 容器配置")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("1.17.1\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("imagePullPolicy")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" IfNotPresent\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ports")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("port\n          "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containerPort")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("protocol")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" TCP\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("nodeName")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" k8s"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("node1 "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 指定调度到k8s-node1节点上")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("nodeSelector")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("nodeenv")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" pro "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 指定调度到具有nodeenv=pro的Node节点上")]),t._v("\n")])])]),s("h3",{attrs:{id:"_5-2-亲和性调度"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-亲和性调度"}},[t._v("#")]),t._v(" 5.2 亲和性调度")]),t._v(" "),s("h4",{attrs:{id:"_5-2-1-概述"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-1-概述"}},[t._v("#")]),t._v(" 5.2.1 概述")]),t._v(" "),s("p",[t._v("虽然定向调度的两种方式，使用起来非常方便，但是也有一定的问题，那就是如果没有满足条件的Node，那么Pod将不会被运行，即使在集群中还有可用的Node列表也不行，这就限制了它的使用场景。\n基于上面的问题，kubernetes还提供了一种亲和性调度（Affinity）。它在nodeSelector的基础之上进行了扩展，可以通过配置的形式，实现优先选择满足条件的Node进行调度，如果没有，也可以调度到不满足条件的节点上，使得调度更加灵活。\nAffinity主要分为三类：")]),t._v(" "),s("ul",[s("li",[t._v("nodeAffinity（node亲和性）：以Node为目标，解决Pod可以调度到那些Node的问题。")]),t._v(" "),s("li",[t._v("podAffinity（pod亲和性）：以Pod为目标，解决Pod可以和那些已存在的Pod部署在同一个拓扑域中的问题。")]),t._v(" "),s("li",[t._v("podAntiAffinity（pod反亲和性）：以Pod为目标，解决Pod不能和那些已经存在的Pod部署在同一拓扑域中的问题。")])]),t._v(" "),s("blockquote",[s("p",[t._v("关于亲和性和反亲和性的使用场景的说明：")]),t._v(" "),s("ul",[s("li",[t._v("亲和性：如果两个应用频繁交互，那么就有必要利用亲和性让两个应用尽可能的靠近，这样可以较少因网络通信而带来的性能损耗。")]),t._v(" "),s("li",[t._v("反亲和性：当应用采用多副本部署的时候，那么就有必要利用反亲和性让各个应用实例打散分布在各个Node上，这样可以提高服务的高可用性。")])])]),t._v(" "),s("h4",{attrs:{id:"_5-2-2-nodeaffinity"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-2-nodeaffinity"}},[t._v("#")]),t._v(" 5.2.2 nodeAffinity")]),t._v(" "),s("p",[t._v("查看nodeAffinity的可选配置项")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# pod.spec.affinity.nodeAffinity")]),t._v("\n  requiredDuringSchedulingIgnoredDuringExecution  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Node节点必须满足指定的所有规则才可以，相当于硬限制")]),t._v("\n    nodeSelectorTerms  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 节点选择列表 ")]),t._v("\n      matchExpressions  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 按节点标签列出的节点选择器要求列表(推荐)")]),t._v("\n        key  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#  键")]),t._v("\n        values "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 值")]),t._v("\n        operator "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 关系符 支持Exists, DoesNotExist, In, NotIn, Gt, Lt")]),t._v("\n  preferredDuringSchedulingIgnoredDuringExecution "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 优先调度到满足指定的规则的Node，相当于软限制 (倾向)     ")]),t._v("\n    preference "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 一个节点选择器项，与相应的权重相关联")]),t._v("\n      matchExpressions "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 按节点标签列出的节点选择器要求列表(推荐)")]),t._v("\n        key "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 键")]),t._v("\n        values "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 值")]),t._v("\n        operator "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 关系符 支持In, NotIn, Exists, DoesNotExist, Gt, Lt  ")]),t._v("\n    weight "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 倾向权重，在范围1-100。")]),t._v("\n")])])]),s("p",[s("strong",[t._v("演示requiredDuringSchedulingIgnoredDuringExecution")])]),t._v(" "),s("ol",[s("li",[t._v("创建pod-nodeaffinity-required.yaml文件")])]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Pod\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" pod"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("nodeaffinity"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("required\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("namespace")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" dev\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containers")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 容器配置")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("1.17.1\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("imagePullPolicy")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" IfNotPresent\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ports")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("port\n          "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containerPort")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("protocol")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" TCP\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("affinity")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 亲和性配置")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("nodeAffinity")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# node亲和性配置")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("requiredDuringSchedulingIgnoredDuringExecution")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Node节点必须满足指定的所有规则才可以，相当于硬规则，类似于定向调度")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("nodeSelectorTerms")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 节点选择列表")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("matchExpressions")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n              "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("key")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nodeenv "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# 匹配存在标签的key为nodeenv的节点，并且value是"xxx"或"yyy"的节点')]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("operator")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" In\n                "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("values")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n                  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"xxx"')]),t._v("\n                  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"yyy"')]),t._v("\n")])])]),s("p",[s("strong",[t._v("演示preferredDuringSchedulingIgnoredDuringExecution")])]),t._v(" "),s("ol",[s("li",[t._v("创建pod-nodeaffinity-preferred.yaml文件")])]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Pod\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" pod"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("nodeaffinity"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("preferred\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("namespace")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" dev\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containers")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 容器配置")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("1.17.1\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("imagePullPolicy")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" IfNotPresent\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ports")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("port\n          "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containerPort")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("protocol")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" TCP\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("affinity")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 亲和性配置")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("nodeAffinity")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# node亲和性配置")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("preferredDuringSchedulingIgnoredDuringExecution")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 优先调度到满足指定的规则的Node，相当于软限制 (倾向)")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("preference")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 一个节点选择器项，与相应的权重相关联")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("matchExpressions")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n              "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("key")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nodeenv\n                "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("operator")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" In\n                "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("values")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n                  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"xxx"')]),t._v("\n                  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"yyy"')]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("weight")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n")])])]),s("blockquote",[s("p",[t._v("nodeAffinity的注意事项：")]),t._v(" "),s("ul",[s("li",[t._v("如果同时定义了nodeSelector和nodeAffinity，那么必须两个条件都满足，Pod才能运行在指定的Node上。")]),t._v(" "),s("li",[t._v("如果nodeAffinity指定了多个nodeSelectorTerms，那么只需要其中一个能够匹配成功即可。")]),t._v(" "),s("li",[t._v("如果一个nodeSelectorTerms中有多个matchExpressions，则一个节点必须满足所有的才能匹配成功。")]),t._v(" "),s("li",[t._v("如果一个Pod所在的Node在Pod运行期间其标签发生了改变，不再符合该Pod的nodeAffinity的要求，则系统将忽略此变化。")])])]),t._v(" "),s("h4",{attrs:{id:"_5-2-3-podaffinity"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-3-podaffinity"}},[t._v("#")]),t._v(" 5.2.3 podAffinity")]),t._v(" "),s("p",[t._v("podAffinity主要实现以运行的Pod为参照，实现让新创建的Pod和参照的Pod在一个区域的功能。")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("pod.spec.affinity.podAffinity\n  requiredDuringSchedulingIgnoredDuringExecution  硬限制\n    namespaces 指定参照pod的namespace\n    topologyKey 指定调度作用域\n    labelSelector 标签选择器\n      matchExpressions  按节点标签列出的节点选择器要求列表(推荐)\n        key    键\n        values 值\n        operator 关系符 支持In, NotIn, Exists, DoesNotExist.\n      matchLabels    指多个matchExpressions映射的内容  \n  preferredDuringSchedulingIgnoredDuringExecution 软限制    \n    podAffinityTerm  选项\n      namespaces\n      topologyKey\n      labelSelector\n         matchExpressions \n            key    键  \n            values 值  \n            operator\n         matchLabels \n    weight 倾向权重，在范围1-1\n")])])]),s("blockquote",[s("p",[t._v("topologyKey用于指定调度的作用域，例如:")]),t._v(" "),s("ul",[s("li",[t._v("如果指定为kubernetes.io/hostname，那就是以Node节点为区分范围。")]),t._v(" "),s("li",[t._v("如果指定为beta.kubernetes.io/os，则以Node节点的操作系统类型来区分。")])])]),t._v(" "),s("p",[s("strong",[t._v("演示requiredDuringSchedulingIgnoredDuringExecution")])]),t._v(" "),s("ol",[s("li",[t._v("创建参照pod：")])]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Pod\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" pod"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("podaffinity"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("target\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("namespace")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" dev\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("labels")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("podenv")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" pro "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 设置标签")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containers")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 容器配置")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("1.17.1\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("imagePullPolicy")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" IfNotPresent\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ports")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("port\n          "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containerPort")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("protocol")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" TCP\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("nodeName")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" k8s"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("node1 "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 将目标pod定向调度到k8s-node1")]),t._v("\n")])])]),s("ol",{attrs:{start:"2"}},[s("li",[t._v("创建podAffinity的pod：")])]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Pod\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" pod"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("podaffinity"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("requred\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("namespace")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" dev\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containers")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 容器配置")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("1.17.1\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("imagePullPolicy")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" IfNotPresent\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ports")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("port\n          "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containerPort")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("protocol")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" TCP\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("affinity")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 亲和性配置")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("podAffinity")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Pod亲和性")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("requiredDuringSchedulingIgnoredDuringExecution")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 硬限制")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("labelSelector")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("matchExpressions")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 该Pod必须和拥有标签podenv=xxx或者podenv=yyy的Pod在同一个Node上，显然没有这样的Pod")]),t._v("\n              "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("key")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" podenv\n                "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("operator")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" In\n                "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("values")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n                  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"pro"')]),t._v("\n                  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"yyy"')]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("topologyKey")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" kubernetes.io/hostname\n")])])]),s("h4",{attrs:{id:"_5-2-4-podantiaffinity"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-4-podantiaffinity"}},[t._v("#")]),t._v(" 5.2.4 podAntiAffinity")]),t._v(" "),s("p",[t._v("podAntiAffinity主要实现以运行的Pod为参照，让新创建的Pod和参照的Pod不在一个区域的功能。")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Pod\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" pod"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("podantiaffinity"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("requred\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("namespace")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" dev\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containers")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 容器配置")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("1.17.1\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("imagePullPolicy")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" IfNotPresent\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ports")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("port\n          "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containerPort")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("protocol")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" TCP\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("affinity")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 亲和性配置")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("podAntiAffinity")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Pod反亲和性")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("requiredDuringSchedulingIgnoredDuringExecution")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 硬限制")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("labelSelector")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("matchExpressions")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n              "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("key")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" podenv\n                "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("operator")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" In\n                "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("values")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n                  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"pro"')]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("topologyKey")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" kubernetes.io/hostname\n")])])])])}),[],!1,null,null,null);s.default=e.exports}}]);