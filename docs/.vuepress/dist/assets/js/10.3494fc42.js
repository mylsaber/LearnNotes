(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{280:function(e,s,t){"use strict";t.r(s);var a=t(13),r=Object(a.a)({},(function(){var e=this,s=e._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h3",{attrs:{id:"select"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#select"}},[e._v("#")]),e._v(" SELECT")]),e._v(" "),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("select * \n-- from customers \n-- where customer_id = 1 \n-- order by first_name;\n")])])]),s("p",[e._v("注释行都可选，甚至可以：")]),e._v(" "),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("select 1,2;\n")])])]),s("p",[e._v("结果列可以加入运算符")]),e._v(" "),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("select \npoints,\n(points+10)*100 as 'diccount' \nfrom customers\n")])])]),s("p",[e._v("去除重复项")]),e._v(" "),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("select distinct name from customers\n")])])]),s("div",{staticClass:"language-mssql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("select * from customers where points > 300;\n-- > >= < <= = != <>不等于\n")])])]),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("select * \nfrom customers\nwhere birth_date > '1990-01-01' or points >1000 and state = 'va';\n-- and具有更高的优先级，所以（birth_date > '1990-01-01'） or （points >1000 and state = 'va'）\n")])])]),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("select * \nfrom customers\nwhere not (birth_date > '1990-01-01' or points > 1000);\n-- not 表示否定条件，相当于\nselect * \nfrom customers\nwhere birth_date < '1990-01-01' and points < 1000;\n")])])]),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("select * \nfrom customers\nwhere state in ('va','vl','ga');\n-- in 同一属性对应多个值\n")])])]),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("select * \nfrom customers\nwhere points between 1000 and 3000;\n")])])]),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("select *\nfrom customers\nwhere last_name like 'brush%';\n-- % 表示一个或过个字符，_ 表示一个字符\n")])])]),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("select * from customers\nwhere last_name regexp '^field';\n-- ^field 表示以字符串field开始的字符\n-- field$ 表示以字符串field结尾的字符\n-- field|mac 表示字符串中含有field或者mac的字符\n-- ^field|mac field开始的字符串或包含mac的字符串\n-- [gim]e 包含ge或者ie或者me的字符串\n-- [a-h]e 包含ae到he的字符串\n")])])]),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("select * from customers\nwhere phone is not null\n-- phone不为空\n")])])]),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("select * from customers\norder by first_name desc,state desc\n-- desc 降序\n\nselect first_name,last_name from customers\norder by 1,2\n-- 表示以first_name,last_name排序\n")])])]),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("select * from customers\nlimit 6,3\n-- 第一位是偏移量，第二位是查询条数\n")])])]),s("h4",{attrs:{id:"内连接"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#内连接"}},[e._v("#")]),e._v(" 内连接")]),e._v(" "),s("p",[e._v("内连接也叫连接，是最早的一种连接。还可以被称为普通连接或者自然连接，内连接是从结果表中删除与其他被连接表中没有匹配行的所有行，所以内连接可能会丢失信息。简写 join on")]),e._v(" "),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("select * from orders o inner join customers c\non o.customer_id = c.customer_id\n")])])]),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("select * from \norder_items oi inner join inventory.products p\non oi.product_id = p.product_id;\n-- 加上跨数据库名称\n")])])]),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("select * from employees e inner join employees m \non e.reports_to = m.employee_id;\n-- 自连接\n")])])]),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("select * from \norders o join customers c \non o.customer_id = c.customer_id \njoin order_statuses os \non o.status = os.order_status_id;\n-- 多张表\n")])])]),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("select *\nfrom order_items oi\njoin order_item_notes oin\n\ton oi.order_id = oin.order_id\n\tand oi.product_id = oin.product_id;\n\t-- 多条件\n")])])]),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("select * \nfrom orders o,customers c\nwhere o.customer_id = c.customer_id;\n-- 隐式写法\n")])])]),s("h4",{attrs:{id:"左外连接"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#左外连接"}},[e._v("#")]),e._v(" 左外连接")]),e._v(" "),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("select * \nfrom customers c\nright join orders o \non c.customer_id = o.customer_id\n")])])]),s("h4",{attrs:{id:"右外连接"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#右外连接"}},[e._v("#")]),e._v(" 右外连接")]),e._v(" "),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("select * \nfrom orders o \nright join customers c \non c.customer_id = o.customer_id\n")])])]),s("h4",{attrs:{id:"交叉连接"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#交叉连接"}},[e._v("#")]),e._v(" 交叉连接")]),e._v(" "),s("p",[e._v("两张表的每一行都和另一张表的每一行连接，比如两张表各有10条数据，交叉结果就有100条")]),e._v(" "),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("select * \nfrom color c\ncross join model m;-- 显式写法\n\nselect *\nfrom color c,model m;-- 隐式写法\n")])])]),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("select *\nfrom orders o\njoin customers c\n\tusing(customer_id)\nleft join shippers sh\n\tusing(shipper_id)\n-- 两张表连接字段相同时可以用using简写\n-- using(order_id,product_id)\n")])])]),s("h4",{attrs:{id:"联合"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#联合"}},[e._v("#")]),e._v(" 联合")]),e._v(" "),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("select * ,'Active' as status\nfrom orders \nwhere order_date >= '2020-01-01'\nunion\nselect *,'Archived' as status\nfrom orders\nwhere order_date < '2020-01-01'\n-- 第一个查询列名作为结果列名\n-- union会去重，union all不会去重\n")])])]),s("h3",{attrs:{id:"insert"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#insert"}},[e._v("#")]),e._v(" INSERT")]),e._v(" "),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("-- 插入一行\ninsert into customers\nvalues (default,'John','Smith','1996-01-01',null,'address','city','CA',default);\n-- default 表示使用默认值\ninsert into customers\n(first_name,last_name,birth_date,address,city,state)\nvalues ('John','Smith','1996-01-01','address','city','CA');\n")])])]),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("-- 插入多行\ninsert into shippers (name) values ('shipper1'),('shipper2'),('shipper3')\n")])])]),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("-- 分层插入\ninsert into orders (customer_id,order_date,status) values (1,'2020-01-01',1);\ninsert into order_items values (LAST_INSERT_ID(),1,1,2.95),(LAST_INSERT_ID(),2,1,3.95);\n-- LAST_INSERT_ID()获取数据库上次插入数据的id\n")])])]),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("create table orders_cp as select * from orders; -- 复制创建表，创建的表会忽略主键等结构\ninsert into orders_cp select * from orders; -- 复制表数据\n")])])]),s("h3",{attrs:{id:"update"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#update"}},[e._v("#")]),e._v(" UPDATE")]),e._v(" "),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("update invoices\nset payment_total=10,payment_date='2020-01-01'\nwhere invoice_id=1;\n")])])]),s("h3",{attrs:{id:"delete"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#delete"}},[e._v("#")]),e._v(" DELETE")]),e._v(" "),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("delete from invoices where invoice_id = 1;\n")])])])])}),[],!1,null,null,null);s.default=r.exports}}]);