(window.webpackJsonp=window.webpackJsonp||[]).push([[81],{351:function(t,a,s){"use strict";s.r(a);var n=s(13),e=Object(n.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"设计一个单例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#设计一个单例"}},[t._v("#")]),t._v(" 设计一个单例")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("一个类只能有一个实例")]),t._v(" "),a("p",[t._v("构造器实例私有化")])]),t._v(" "),a("li",[a("p",[t._v("它自己自行创建这个实例")]),t._v(" "),a("p",[t._v("含有一个该类的静态变量保存这个唯一实例")])]),t._v(" "),a("li",[a("p",[t._v("必须自行向系统提供这个实例")]),t._v(" "),a("ul",[a("li",[t._v("对外直接暴露")]),t._v(" "),a("li",[t._v("静态方式get获取")])])])]),t._v(" "),a("h3",{attrs:{id:"饿汉式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#饿汉式"}},[t._v("#")]),t._v(" 饿汉式")]),t._v(" "),a("p",[t._v("直接创建对象，不存在线程安全问题")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Singleton")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("final")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Singleton")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("INSTANE")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Singleton")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Singleton")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Singleton")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("final")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Singleton")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("INSTANE")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("INSTANE")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Singleton")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Singleton")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h3",{attrs:{id:"懒汉式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#懒汉式"}},[t._v("#")]),t._v(" 懒汉式")]),t._v(" "),a("p",[t._v("线程不安全")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Singleton")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   \t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Singleton")]),t._v(" instance"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Singleton")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Singleton")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getInstance")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("instance "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            instance "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Singleton")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" instance"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("使用synchronized锁，但是每次获取实例都要加锁")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Singleton")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   \t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("volatile")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Singleton")]),t._v(" instance"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Singleton")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Singleton")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getInstance")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("synchronized")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Singleton")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n         \t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("instance "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            \tinstance "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Singleton")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n       \t\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        \t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" instance"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("   \n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("当已经实例化后，没有必要每次都争抢锁，优化性能")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Singleton")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   \t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("volatile")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Singleton")]),t._v(" instance"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Singleton")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Singleton")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getInstance")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("instance "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("synchronized")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Singleton")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n         \t\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("instance "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            \t\tinstance "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Singleton")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n       \t\t\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        \t\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" instance"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("   \n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" instance"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//内部类被加载和初始化时，才创建实例对象")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//静态内部类不会自动随着外部类的加载和初始化而初始化，要单独加载初始化")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//因为是内部类加载和初始化时创建的实例，所以线程安全")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Singleton")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Singleton")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Inner")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("final")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Singleton")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("INSTANCE")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Singleton")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Singleton")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getInstance")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Inner")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("INSTANCE")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h2",{attrs:{id:"请简单介绍spring支持的常用数据库事务传播属性和事务隔离级别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#请简单介绍spring支持的常用数据库事务传播属性和事务隔离级别"}},[t._v("#")]),t._v(" 请简单介绍Spring支持的常用数据库事务传播属性和事务隔离级别")]),t._v(" "),a("h3",{attrs:{id:"事务传播行为"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#事务传播行为"}},[t._v("#")]),t._v(" 事务传播行为")]),t._v(" "),a("p",[t._v("一个事务方法运行在一个开启了事务的方法中时，当前方法是使用原来的事务还是开启一个新事务。")]),t._v(" "),a("p",[t._v("Spring支持7钟传播属性")]),t._v(" "),a("ul",[a("li",[t._v("Propagation.REQUIRED（required）：支持当前事务，如果当前有事务， 那么加入事务， 如果当前没有事务则新建一个(默认情况)")]),t._v(" "),a("li",[t._v("Propagation.NOT_SUPPORTED（not_supported) ： 以非事务方式执行操作，如果当前存在事务就把当前事务挂起，执行完后恢复事务（忽略当前事务）；")]),t._v(" "),a("li",[t._v("Propagation.SUPPORTS (supports) ：如果当前有事务则加入，如果没有则不用事务。")]),t._v(" "),a("li",[t._v("Propagation.MANDATORY (mandatory) ：支持当前事务，如果当前没有事务，则抛出异常。（当前必须有事务）")]),t._v(" "),a("li",[t._v("PROPAGATION_NEVER (never) ：以非事务方式执行，如果当前存在事务，则抛出异常。（当前必须不能有事务）")]),t._v(" "),a("li",[t._v("Propagation.REQUIRES_NEW (requires_new) ：支持当前事务，如果当前有事务，则挂起当前事务，然后新创建一个事务，如果当前没有事务，则自己创建一个事务。")]),t._v(" "),a("li",[t._v("Propagation.NESTED (nested 嵌套事务)  ：如果当前存在事务，则嵌套在当前事务中。如果当前没有事务，则新建一个事务自己执行（和required一样）。嵌套的事务使用保存点作为回滚点，当内部事务回滚时不会影响外部事物的提交；但是外部回滚会把内部事务一起回滚回去。（这个和新建一个事务的区别）")])]),t._v(" "),a("h3",{attrs:{id:"事务的隔离级别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#事务的隔离级别"}},[t._v("#")]),t._v(" 事务的隔离级别")]),t._v(" "),a("p",[t._v("脏读：读取了未提交的数据")]),t._v(" "),a("p",[t._v("不可重复读：事务读取同一数据两次不一样")]),t._v(" "),a("p",[t._v("幻读：事务读取了两次数据，两次数据读取的集合不一样")]),t._v(" "),a("h3",{attrs:{id:"数据库的隔离级别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据库的隔离级别"}},[t._v("#")]),t._v(" 数据库的隔离级别")]),t._v(" "),a("ul",[a("li",[t._v("读未提交（Read Uncommitted）")]),t._v(" "),a("li",[t._v("读已提交（Read Committed）")]),t._v(" "),a("li",[t._v("可重复读（Repeatable Read）")]),t._v(" "),a("li",[t._v("串行化（Serializable）")])]),t._v(" "),a("h2",{attrs:{id:"简单谈一下springmvc工作流程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#简单谈一下springmvc工作流程"}},[t._v("#")]),t._v(" 简单谈一下SpringMVC工作流程")]),t._v(" "),a("p",[a("img",{attrs:{src:"D:%5CJavaLearn%5Clearn-notes%5C%E9%9D%A2%E8%AF%95%E9%A2%98%5Cimages%5Cspringmvc%E6%B5%81%E7%A8%8B.webp",alt:""}})]),t._v(" "),a("ol",[a("li",[t._v("用户发送请求至前端控制器DispatcherServlet")]),t._v(" "),a("li",[t._v("DispatcherServlet收到请求调用处理器映射器HandlerMapping。")]),t._v(" "),a("li",[t._v("处理器映射器根据请求url找到具体的处理器，生成处理器执行链HandlerExecutionChain(包括处理器对象和处理器拦截器)一并返回给DispatcherServlet。")]),t._v(" "),a("li",[t._v("DispatcherServlet根据处理器Handler获取处理器适配器HandlerAdapter执行HandlerAdapter处理一系列的操作，如：参数封装，数据格式转换，数据验证等操作")]),t._v(" "),a("li",[t._v("执行处理器Handler(Controller，也叫页面控制器)。")]),t._v(" "),a("li",[t._v("Handler执行完成返回ModelAndView")]),t._v(" "),a("li",[t._v("HandlerAdapter将Handler执行结果ModelAndView返回到DispatcherServlet")]),t._v(" "),a("li",[t._v("DispatcherServlet将ModelAndView传给ViewReslover视图解析器")]),t._v(" "),a("li",[t._v("ViewReslover解析后返回具体View")]),t._v(" "),a("li",[t._v("DispatcherServlet对View进行渲染视图（即将模型数据model填充至视图中）。")]),t._v(" "),a("li",[t._v("DispatcherServlet响应用户。")])]),t._v(" "),a("h2",{attrs:{id:"mybatis中数据库字段名与实体类字段名不一致解决方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mybatis中数据库字段名与实体类字段名不一致解决方法"}},[t._v("#")]),t._v(" Mybatis中数据库字段名与实体类字段名不一致解决方法")]),t._v(" "),a("ol",[a("li",[t._v("sql语句中取别名")]),t._v(" "),a("li",[t._v("配置开启驼峰命名")]),t._v(" "),a("li",[t._v("自定义resultMap映射")])]),t._v(" "),a("h2",{attrs:{id:"请谈谈你对volatile理解"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#请谈谈你对volatile理解"}},[t._v("#")]),t._v(" 请谈谈你对volatile理解")]),t._v(" "),a("p",[t._v("volatile是Java虚拟机提供的轻量级的同步机制")]),t._v(" "),a("ul",[a("li",[t._v("保证可见性")]),t._v(" "),a("li",[t._v("不保证原子性")]),t._v(" "),a("li",[t._v("禁止指令重排")])]),t._v(" "),a("h2",{attrs:{id:"你在哪里使用到volatile"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#你在哪里使用到volatile"}},[t._v("#")]),t._v(" 你在哪里使用到volatile")]),t._v(" "),a("p",[t._v("单例模式中实例新建实例时禁止指令重排")]),t._v(" "),a("h2",{attrs:{id:"cas你知道吗"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cas你知道吗"}},[t._v("#")]),t._v(" CAS你知道吗")]),t._v(" "),a("p",[t._v("CAS就是compareAndSet，即比较并交换,是一种实现并发算法时常用到的技术。")]),t._v(" "),a("h2",{attrs:{id:"cas有什么缺点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cas有什么缺点"}},[t._v("#")]),t._v(" CAS有什么缺点")]),t._v(" "),a("ol",[a("li",[t._v("循环时间长开销大，我们可以看到getAndAddInt方法中有一个dowhile循环，如果CAS一直失败，会一直保持尝试。如果CAS长时间一直不成功，可能给CPU带来很大的开销。")]),t._v(" "),a("li",[t._v("只能保证一个共享变量的原子性。当对一个共享变量执行操作时，我们可以使用循环CAS的方式保证原子性操作，但是对多个共享变量的操作时，循环CAS就无法保证操作的原子性了，这个时候可以用锁来保证原子性。")]),t._v(" "),a("li",[t._v("会出现ABA问题，可以使用时间戳原子引用来解决这个问题。简单的说就是在修改数值的时候带上一个版本号。")])]),t._v(" "),a("h2",{attrs:{id:"线程安全list"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#线程安全list"}},[t._v("#")]),t._v(" 线程安全List")]),t._v(" "),a("ul",[a("li",[t._v("Vector<>()类：不建议使用")]),t._v(" "),a("li",[t._v("Collection.synchronizedList(new ArrayList<>())：不建议使用")]),t._v(" "),a("li",[t._v("CopyOnWriteArray()：建议使用。写入时加锁，拷贝一份数据，在拷贝中添加数据后替换原数据，然后解锁")])]),t._v(" "),a("h2",{attrs:{id:"线程安全set"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#线程安全set"}},[t._v("#")]),t._v(" 线程安全Set")]),t._v(" "),a("ul",[a("li",[t._v("Collection.synchronizedList(new HashSet<>())：不建议使用")]),t._v(" "),a("li",[t._v("CopyOnWriteArraySet()：建议使用。底层使用CopyOnWriteArray()实现")])]),t._v(" "),a("h2",{attrs:{id:"聊聊hashset"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#聊聊hashset"}},[t._v("#")]),t._v(" 聊聊HashSet")]),t._v(" "),a("p",[t._v("HashSet底层使用HashMap实现，添加数据时直接做map的key，value都是用Object常量占位")]),t._v(" "),a("h2",{attrs:{id:"线程安全map"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#线程安全map"}},[t._v("#")]),t._v(" 线程安全Map")]),t._v(" "),a("ul",[a("li",[t._v("Collection.synchronizedMap(new HashMap<>())：不建议使用")]),t._v(" "),a("li",[t._v("ConcurrentHashMap<>()：推荐使用")])]),t._v(" "),a("h2",{attrs:{id:"聊一聊公平锁非公平锁"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#聊一聊公平锁非公平锁"}},[t._v("#")]),t._v(" 聊一聊公平锁非公平锁")]),t._v(" "),a("p",[t._v("ReentrantLock可以创建公平或非公平锁，默认非公平锁")]),t._v(" "),a("ul",[a("li",[t._v("公平锁：多个线程按照排队顺序来获取锁")]),t._v(" "),a("li",[t._v("非公平锁：上来就尝试占用锁，失败加入队列，再采用类似公平锁方式，有可能造成饥饿现象")])]),t._v(" "),a("h2",{attrs:{id:"可重入锁"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#可重入锁"}},[t._v("#")]),t._v(" 可重入锁")]),t._v(" "),a("p",[t._v("同一个线程获得锁后，内层递归函数仍然可以获取该锁，也就是说，线程可以进入任何一个它已经拥有的锁的同步代码块。")]),t._v(" "),a("h2",{attrs:{id:"自旋锁"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#自旋锁"}},[t._v("#")]),t._v(" 自旋锁")]),t._v(" "),a("p",[t._v("尝试获取锁的线程不会立即阻塞，而是采用循环的方式尝试获取锁，好处是减少上下文切换的资源消耗，缺点是线程循环会一直消耗CPU资源")]),t._v(" "),a("h2",{attrs:{id:"阻塞队列"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#阻塞队列"}},[t._v("#")]),t._v(" 阻塞队列")]),t._v(" "),a("ol",[a("li",[t._v("ArrayBlockingQueue：由数组结构组成的有界阻塞队列")]),t._v(" "),a("li",[t._v("LinkedBlockingQueue：由链表结构组成的有界阻塞队列，大小默认Integer.MAX_VALUE")]),t._v(" "),a("li",[t._v("PriorityBlockingQueue：支持优先级排序的无界队列")]),t._v(" "),a("li",[t._v("DelayQueue：使用优先级队列实现的延迟无界阻塞队列")]),t._v(" "),a("li",[t._v("SynchronousQueue：不存储元素的阻塞队列")]),t._v(" "),a("li",[t._v("LinkedTransferQueue：链表组成的无界阻塞队列")]),t._v(" "),a("li",[t._v("LinkedBlockingDeque：链表组成的双向阻塞队列")])]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("方法类型")]),t._v(" "),a("th",[t._v("抛出异常")]),t._v(" "),a("th",[t._v("特殊值")]),t._v(" "),a("th",[t._v("阻塞")]),t._v(" "),a("th",[t._v("超时")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("插入")]),t._v(" "),a("td",[t._v("add（e）")]),t._v(" "),a("td",[t._v("offer（e）")]),t._v(" "),a("td",[t._v("put（e）")]),t._v(" "),a("td",[t._v("offer（e，time，unit）")])]),t._v(" "),a("tr",[a("td",[t._v("移除")]),t._v(" "),a("td",[t._v("remove()")]),t._v(" "),a("td",[t._v("poll()")]),t._v(" "),a("td",[t._v("take（）")]),t._v(" "),a("td",[t._v("poll（time，unit）")])]),t._v(" "),a("tr",[a("td",[t._v("检查")]),t._v(" "),a("td",[t._v("element()")]),t._v(" "),a("td",[t._v("peek()")]),t._v(" "),a("td"),t._v(" "),a("td")])])]),t._v(" "),a("h2",{attrs:{id:"synchronized和lock有什么区别-用新的lock有什么好处-举例说说"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#synchronized和lock有什么区别-用新的lock有什么好处-举例说说"}},[t._v("#")]),t._v(" synchronized和Lock有什么区别？用新的Lock有什么好处？举例说说")]),t._v(" "),a("ul",[a("li",[t._v("原始构成\n"),a("ol",[a("li",[t._v("synchronized属于JVM层面，底层通过monitor对象来完成，wait/notify等方法也依赖与monitor对象只能在同步代码块或方法中才能调用")]),t._v(" "),a("li",[t._v("Lock是具体类，是API层面的锁")])])]),t._v(" "),a("li",[t._v("使用方法\n"),a("ol",[a("li",[t._v("synchronized不需要手动释放锁")]),t._v(" "),a("li",[t._v("ReentrantLock需要手动释放锁，否则可能会造成死锁现象")])])]),t._v(" "),a("li",[t._v("等待是否可中断\n"),a("ol",[a("li",[t._v("synchronized不可中断，除非抛异常或者正常执行完")]),t._v(" "),a("li",[t._v("ReentrantLock可中断\n"),a("ol",[a("li",[t._v("设置超时方法tryLock（long timeout，TimeUnit unit）")]),t._v(" "),a("li",[t._v("lockInterruptibly()放入代码块中，调用interrupt()方法中断")])])])])]),t._v(" "),a("li",[t._v("是否公平\n"),a("ol",[a("li",[t._v("synchronized非公平")]),t._v(" "),a("li",[t._v("ReentrantLock都可以实现")])])]),t._v(" "),a("li",[t._v("锁绑定多个条件Condition\n"),a("ol",[a("li",[t._v("synchronized没有")]),t._v(" "),a("li",[t._v("ReentrantLock可以实现分组唤醒线程，精确唤醒")])])])]),t._v(" "),a("h2",{attrs:{id:"线程池用过吗-threadpoolexecutor谈谈你的理解"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#线程池用过吗-threadpoolexecutor谈谈你的理解"}},[t._v("#")]),t._v(" 线程池用过吗？ThreadPoolExecutor谈谈你的理解？")]),t._v(" "),a("p",[t._v("线程池主要工作是控制运行的线程数量，实现线程复用。")]),t._v(" "),a("ul",[a("li",[t._v("降低资源消耗。通过复用线程降低线程创建和销毁造成资源消耗")]),t._v(" "),a("li",[t._v("提高响应速度。任务到达时，立即执行")]),t._v(" "),a("li",[t._v("提高线程的可管理性。线程是稀缺资源，不能无限制创建，使用线程池可以进行统一分配，监控调优")])]),t._v(" "),a("p",[t._v("线程池的7大参数")]),t._v(" "),a("ul",[a("li",[t._v("corePoolSize：核心线程数")]),t._v(" "),a("li",[t._v("maximumPoolSize：最大线程数")]),t._v(" "),a("li",[t._v("keepAliveTime：多余线程存活时间")]),t._v(" "),a("li",[t._v("timeUnit：时间单位")]),t._v(" "),a("li",[t._v("workQueue：阻塞队列")]),t._v(" "),a("li",[t._v("threadFactory：线程工厂")]),t._v(" "),a("li",[t._v("rejectedHandler：拒绝策略")])])])}),[],!1,null,null,null);a.default=e.exports}}]);