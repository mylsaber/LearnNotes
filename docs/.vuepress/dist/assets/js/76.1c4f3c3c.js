(window.webpackJsonp=window.webpackJsonp||[]).push([[76],{346:function(s,t,a){"use strict";a.r(t);var n=a(13),e=Object(n.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h2",{attrs:{id:"nosql概述"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#nosql概述"}},[s._v("#")]),s._v(" Nosql概述")]),s._v(" "),t("h3",{attrs:{id:"为什么用nosql"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#为什么用nosql"}},[s._v("#")]),s._v(" 为什么用NoSql")]),s._v(" "),t("p",[s._v("网站80%的情况都是在读，使用缓存减轻数据库压力，提高效率")]),s._v(" "),t("h3",{attrs:{id:"什么是nosql"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#什么是nosql"}},[s._v("#")]),s._v(" 什么是NoSql")]),s._v(" "),t("blockquote",[t("p",[s._v("NoSql")])]),s._v(" "),t("p",[s._v("NoSQL = Not Only SQL：泛指非关系型数据库")]),s._v(" "),t("h3",{attrs:{id:"nosql四大分类"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#nosql四大分类"}},[s._v("#")]),s._v(" NoSQL四大分类")]),s._v(" "),t("p",[t("strong",[s._v("kv键值对：")])]),s._v(" "),t("ul",[t("li",[s._v("新浪：redis")]),s._v(" "),t("li",[s._v("美团：redis + tair")]),s._v(" "),t("li",[s._v("阿里、百度：redis + memecache")])]),s._v(" "),t("p",[t("strong",[s._v("文档型数据库：")])]),s._v(" "),t("ul",[t("li",[s._v("MongoDB（一般要掌握）\n"),t("ul",[t("li",[s._v("MongoDB是一个基于分布式文件存储的数据库，c++编写，主要用于处理大量文档")]),s._v(" "),t("li",[s._v("MongoDB是一个介于关系型数据库和非关系型数据库中间产品")])])]),s._v(" "),t("li",[s._v("ConthDB")])]),s._v(" "),t("p",[t("strong",[s._v("列存储数据库：")])]),s._v(" "),t("ul",[t("li",[s._v("HBase")]),s._v(" "),t("li",[s._v("分布式文件系统")])]),s._v(" "),t("p",[t("strong",[s._v("图关系数据库")])]),s._v(" "),t("ul",[t("li",[s._v("存放关系，比如朋友圈，广告推荐")]),s._v(" "),t("li",[s._v("Neo4j")]),s._v(" "),t("li",[s._v("InfoGrid")])]),s._v(" "),t("h2",{attrs:{id:"redis入门"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#redis入门"}},[s._v("#")]),s._v(" Redis入门")]),s._v(" "),t("h3",{attrs:{id:"linux安装"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#linux安装"}},[s._v("#")]),s._v(" Linux安装")]),s._v(" "),t("p",[s._v("1.解压安装包")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@mylsaber redis"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# mv redis-6.2.6.tar.gz /opt/")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@mylsaber opt"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# tar -zxvf redis-6.2.6.tar.gz ")]),s._v("\n")])])]),t("p",[s._v("2.进入解压后文件，安装基本环境")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@mylsaber redis-6.2.6"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# yum install gcc-c++")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("make")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("make")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v("\n")])])]),t("p",[s._v("3.redis默认安装路径")]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("/usr/local/bin/\n")])])]),t("p",[s._v("4.复制配置文件")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@mylsaber bin"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# cp /opt/redis-6.2.6/redis.conf config/myredisconfig")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 设置配置文件后台启动")]),s._v("\ndaemonize "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("yes")]),s._v("\n")])])]),t("p",[s._v("5.启动redis")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("redis-server config/myredis.conf\n")])])]),t("p",[s._v("6.连接redis")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("redis-cli "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-p")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("6379")]),s._v("\n")])])]),t("p",[s._v("7.关闭redis服务")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:637"),t("span",{pre:!0,attrs:{class:"token operator"}},[t("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("9")]),s._v(">")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("shutdown")]),s._v("\n")])])]),t("h3",{attrs:{id:"性能测试"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#性能测试"}},[s._v("#")]),s._v(" 性能测试")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 测试100个并发，100000请求")]),s._v("\nredis-benchmark "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-h")]),s._v(" localhost "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-p")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("6379")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-c")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-n")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("100000")]),s._v("\n")])])]),t("h3",{attrs:{id:"基础知识"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#基础知识"}},[s._v("#")]),s._v(" 基础知识")]),s._v(" "),t("p",[s._v("redis默认有16个数据库，默认使用第0个，可以使用select进行切换")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 切换数据库")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看所有key")]),s._v("\nkeys *\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 清空当前数据库")]),s._v("\nflushdb\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 清空所有数据库")]),s._v("\nflushall\n")])])]),t("blockquote",[t("p",[s._v("Redis是单线程")])]),s._v(" "),t("p",[s._v("Redis基于内存操作，性能瓶颈是内存和网络带宽")]),s._v(" "),t("p",[s._v("Redis是C语言编写，官方提供数据为100000+的QPS。")]),s._v(" "),t("h2",{attrs:{id:"五大数据类型"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#五大数据类型"}},[s._v("#")]),s._v(" 五大数据类型")]),s._v(" "),t("h4",{attrs:{id:"redis-key"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#redis-key"}},[s._v("#")]),s._v(" redis-key")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看所有key")]),s._v("\nkeys *\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 判断当前key是否存在")]),s._v("\nexists name\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 移动当前key到指定数据库")]),s._v("\nmove name db\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 设置key过期时间，单位秒")]),s._v("\nexpire name "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看key过期剩余时间")]),s._v("\nttl name\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看数据类型")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("type")]),s._v(" name\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 删除key")]),s._v("\ndel name\n")])])]),t("h4",{attrs:{id:"string"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#string"}},[s._v("#")]),s._v(" String")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 设置值")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("set")]),s._v(" name jiang\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 获取值")]),s._v("\nget name\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 追加字符串，如果有值，在后面追加，如果没有，相当于set")]),s._v("\nappend name fangwei\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 设置加1，减1")]),s._v("\nincr age\ndecr age\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 设置增加，减少步长")]),s._v("\nincrby age "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v("\ndecrby age "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 截取字符串，[0,3]，获取全部[0,-1]")]),s._v("\ngetrange key "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 替换指定位置开始的字符串")]),s._v("\nsetrange key "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" xx\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 设置过期时间")]),s._v("\nsetex key "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v(" value\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 如果值不存在设置")]),s._v("\nsetnx key value\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 批量设置值")]),s._v("\nmset k1 v1 k2 v2 k3 v3\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 批量获取值")]),s._v("\nmget k1 k2 k3\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 批量如果值不存在设置，原子操作")]),s._v("\nmsetnx k1 v1 k4 v4 \n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 获取后设置,如果没有返回nil并设置值")]),s._v("\ngetset key value\n")])])]),t("p",[s._v("常用场景：")]),s._v(" "),t("ul",[t("li",[s._v("计数器")]),s._v(" "),t("li",[s._v("统计数量")]),s._v(" "),t("li",[s._v("点赞")])]),s._v(" "),t("h4",{attrs:{id:"list"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#list"}},[s._v("#")]),s._v(" List")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 列表左边添加数据")]),s._v("\nlpush key v1 v2 v3\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 列表右边添加数据")]),s._v("\nrpush key v4\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 获取区间数据[0,1]")]),s._v("\nlrange key "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 列表左边移除数据")]),s._v("\nlpop key count\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 列表右边移除数据")]),s._v("\nrpop key count\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 通过下标获取数据")]),s._v("\nlindex key "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 返回列表长度")]),s._v("\nllen key\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 移除指定个数的值")]),s._v("\nlrem key count value\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 通过下标截取并修改值[2,3]")]),s._v("\nltrim key "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 移除最后一个元素，并移动到新列表")]),s._v("\nrpoplpush "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("source")]),s._v(" destination\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 列表指定下标值替换新值，key或下标不存在报错")]),s._v("\nlset key index value\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 在列表某个元素前或者后插入值")]),s._v("\nlinsert key before"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("after pivot value\n\n")])])]),t("h4",{attrs:{id:"set"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#set"}},[s._v("#")]),s._v(" Set")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 设置set值")]),s._v("\nsadd key v1 v2 v3\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 获取set所有值")]),s._v("\nsmembers key\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 判断key中是否有指定值")]),s._v("\nsismember key value\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 获取key集合中的元素个数")]),s._v("\nscard key\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 移除set中指定元素")]),s._v("\nsrem key v1 v2\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 随机获取指定个数元素")]),s._v("\nsrandmember key count\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 随机删除指定个数元素")]),s._v("\nspop key count\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 指定值移动到另外一个set")]),s._v("\nsmove "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("source")]),s._v(" destination value\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 获取第一中差集")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sdiff")]),s._v(" key1 key2\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 获取交集")]),s._v("\nsinter key1 key2\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 获取并集")]),s._v("\nsunion key1 key2\n")])])]),t("h4",{attrs:{id:"hash-哈希"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#hash-哈希"}},[s._v("#")]),s._v(" hash（哈希）")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 设置哈希的key-value")]),s._v("\nhset key name jiang age "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("18")]),s._v("\nhmset key name jiang age "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("18")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 获取key中一个字段值")]),s._v("\nhget key name\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 获取多个字段值")]),s._v("\nhmget key name age\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#获取全部数据")]),s._v("\nhgetall key\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 删除指定key的字段")]),s._v("\nhdel key age\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 获取字段数量")]),s._v("\nhlen key\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 判断字段是否存在")]),s._v("\nhexists key name\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 只获取所有字段")]),s._v("\nhkeys key\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 只获取所有值")]),s._v("\nhvals key\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 设置字段值增加步长")]),s._v("\nhincrby key age "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 如果不存在设置字段值")]),s._v("\nhsetnx key age "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("19")]),s._v("\n")])])]),t("h4",{attrs:{id:"zset-有序集合"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#zset-有序集合"}},[s._v("#")]),s._v(" Zset（有序集合）")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 添加元素，score可以是整数，也可以是浮点数，还可以是+inf表示无穷大，-inf表示负无穷大")]),s._v("\nzadd key score value "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("score value"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 获取索引区间内的元素")]),s._v("\nzrange key "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-1")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("withscores"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 获取分数区间内的元素")]),s._v("\nzrangebyscore key minscore maxscore "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("whitscores"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("limit offset count"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 删除指定元素")]),s._v("\nzrem key member "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("member"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 获取集合中元素个数")]),s._v("\nzcard key\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 增减元素的score")]),s._v("\nzincrby key increment member\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 获取分数区间内元素个数")]),s._v("\nzcount key min max\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 获取项在zset中的索引")]),s._v("\nzrank key member\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 获取元素的分数")]),s._v("\nzscore key member\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 获取项在zset中倒序的索引")]),s._v("\nzrevrank key member\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 倒序获取索引区间内的元素")]),s._v("\nzrevrange key start stop "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("withscores"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 倒序获取分数区间内的元素")]),s._v("\nzrevrangebyscore key max min "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("whitscores"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("limit offset count"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 删除索引区间内的元素")]),s._v("\nzremrangebyrank key start stop\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 删除分数区间内的元素")]),s._v("\nzremrangebyscore key min max\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 获取指定数量的key的交集。例如有 key1:{10:A,20:B,30:C},key2{40:B,50:C,60:D},那么命令 zinterstore key3 2 key1 key2 意思就是 将key1 key2这两个集合的交集 赋给key3，如何获取key1与key2的交集呢。 key1中存在 A B C,key2中存在 B C D,那么交集就是 B 和 C，且 B与C对应的score也会叠加，即 key3{B:20+40=60,C:30+50=80}，weights表示乘法因子")]),s._v("\nzinterstore destination numkeys key "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("key …"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("WEIGHTS weight "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("weight …"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("AGGREGATE SUM"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("MIN"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("MAX"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#　获取指定数量key的并集，例如有 key1{10:A,20:B,30:C},key2{40:B,50:C,60:D},可以看出 A和D不是key1与key2共有的，但是并集中只要存在就会记录进去，然后B与C是共有的，即 并集的结果就是 key3{10:A,B:60,D:60,C:80}")]),s._v("\nzunionstore destination numkeys key "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("key …"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("WEIGHTS weight "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("weight …"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("AGGREGATE SUM"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("MIN"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("MAX"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n")])])]),t("h2",{attrs:{id:"事务"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#事务"}},[s._v("#")]),s._v(" 事务")]),s._v(" "),t("p",[s._v("Redis单条命令保证原子性，但是事务不保证原子性")]),s._v(" "),t("p",[s._v("Redis事务没有隔离级别的概念")]),s._v(" "),t("blockquote",[t("p",[s._v("开启提交事务")])]),s._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:637"),t("span",{pre:!0,attrs:{class:"token operator"}},[t("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("9")]),s._v(">")]),s._v(" multi  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 开启事务")]),s._v("\nOK\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:6379"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("TX"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("set")]),s._v(" k1 v1\nQUEUED\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:6379"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("TX"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("set")]),s._v(" k2 v2\nQUEUED\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:6379"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("TX"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" get k2\nQUEUED\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:6379"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("TX"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("set")]),s._v(" k3 v3\nQUEUED\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:6379"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("TX"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exec")]),s._v("   "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 执行事务")]),s._v("\n")])])]),t("blockquote",[t("p",[s._v("放弃事务")])]),s._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:637"),t("span",{pre:!0,attrs:{class:"token operator"}},[t("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("9")]),s._v(">")]),s._v(" multi\nOK\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:6379"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("TX"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("set")]),s._v(" name jiang\nQUEUED\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:6379"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("TX"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("set")]),s._v(" age "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("19")]),s._v("\nQUEUED\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:6379"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("TX"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" DISCARD  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 取消执行，所有命令都不执行")]),s._v("\nOK\n")])])]),t("blockquote",[t("p",[s._v("编译型异常（命令有问题）事务中所有命令都不会执行")])]),s._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:637"),t("span",{pre:!0,attrs:{class:"token operator"}},[t("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("9")]),s._v(">")]),s._v(" multi\nOK\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:6379"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("TX"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("set")]),s._v(" name jiang\nQUEUED\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:6379"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("TX"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" getset name "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 错误命令")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("error"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" ERR wrong number of arguments "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'getset'")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("command")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:6379"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("TX"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("set")]),s._v(" age "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("18")]),s._v("\nQUEUED\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:6379"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("TX"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exec")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 运行后所有命令不生效")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("error"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" EXECABORT Transaction discarded because of previous errors.\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:637"),t("span",{pre:!0,attrs:{class:"token operator"}},[t("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("9")]),s._v(">")]),s._v(" get name\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("nil"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])])]),t("blockquote",[t("p",[s._v("运行时异常")])]),s._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:637"),t("span",{pre:!0,attrs:{class:"token operator"}},[t("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("9")]),s._v(">")]),s._v(" multi\nOK\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:6379"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("TX"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("set")]),s._v(" name jiang\nQUEUED\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:6379"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("TX"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" incr name "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 执行失败，但是其他指令成功")]),s._v("\nQUEUED\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:6379"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("TX"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" get name\nQUEUED\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:6379"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("TX"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exec")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" OK\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("error"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" ERR value is not an integer or out of range\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"jiang"')]),s._v("\n")])])]),t("blockquote",[t("p",[s._v("Redis监测数据")])]),s._v(" "),t("p",[s._v("watch key [key]：监视数据")]),s._v(" "),t("p",[s._v("unwatch：取消监视")]),s._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:637"),t("span",{pre:!0,attrs:{class:"token operator"}},[t("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("9")]),s._v(">")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("watch")]),s._v(" money "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 监视数据")]),s._v("\nOK\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:637"),t("span",{pre:!0,attrs:{class:"token operator"}},[t("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("9")]),s._v(">")]),s._v(" multi\nOK\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:6379"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("TX"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" DECRBY money "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("20")]),s._v("\nQUEUED\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:6379"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("TX"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" INCRBY out "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("20")]),s._v("\nQUEUED\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:6379"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("TX"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exec")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 数据没有变化，事务执行成功")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("integer"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("80")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("integer"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("20")]),s._v("\n")])])]),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:637"),t("span",{pre:!0,attrs:{class:"token operator"}},[t("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("9")]),s._v(">")]),s._v(" WATCH money "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 监视数据")]),s._v("\nOK\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:637"),t("span",{pre:!0,attrs:{class:"token operator"}},[t("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("9")]),s._v(">")]),s._v(" multi\nOK\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:6379"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("TX"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" DECRBY money "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v("\nQUEUED\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:6379"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("TX"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" INCRBY out "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v("\nQUEUED\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:6379"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("TX"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exec")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 执行事务时，数据发生变化，事务执行失败")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("nil"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])])]),t("h2",{attrs:{id:"redis-conf详解"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#redis-conf详解"}},[s._v("#")]),s._v(" Redis.conf详解")]),s._v(" "),t("blockquote",[t("p",[s._v("单位")])]),s._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 1k => 1000 bytes")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 1kb => 1024 bytes")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 1m => 1000000 bytes")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 1mb => 1024*1024 bytes")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 1g => 1000000000 bytes")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 1gb => 1024*1024*1024 bytes")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# units are case insensitive so 1GB 1Gb 1gB are all the same.")]),s._v("\n")])])]),t("p",[s._v("1.配置文件units大小写不敏感")]),s._v(" "),t("blockquote",[t("p",[s._v("引入配置文件")])]),s._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# include /path/to/local.conf")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# include /path/to/other.conf")]),s._v("\n")])])]),t("blockquote",[t("p",[s._v("网络")])]),s._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("bind")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1 "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 绑定ip")]),s._v("\nprotected-mode "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("yes")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 保护模式")]),s._v("\nport "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("6379")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 端口设置")]),s._v("\n")])])]),t("blockquote",[t("p",[s._v("通用")])]),s._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[s._v("daemonize no "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#以守护进程方式运行，默认no，需要开启")]),s._v("\npidfile /var/run/redis_6379.pid "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 如果以后台的方式运行，需要指定一个pid文件")]),s._v("\nloglevel notice "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 日志级别")]),s._v("\nlogfile "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('""')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 日志的文件位置名")]),s._v("\ndatabases "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("16")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 数据库数量，默认16个")]),s._v("\n")])])]),t("blockquote",[t("p",[s._v("快照")])]),s._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[s._v("在3600秒内，至少有一个key修改，进行持久化\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# save 3600 1")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# save 300 100")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# save 60 10000")]),s._v("\n\nstop-writes-on-bgsave-error "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("yes")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 持久化如果出错，是否还需要继续工作")]),s._v("\nrdbcompression "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("yes")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 是否压缩rdb文件，需要消耗cpu资源")]),s._v("\nrdbchecksum "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("yes")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# rdb文件是否错误校验")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("dir")]),s._v(" ./ "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# rdb文件保存目录")]),s._v("\n")])])]),t("blockquote",[t("p",[s._v("客户端")])]),s._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[s._v("maxclients "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10000")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 最大客户端连接数")]),s._v("\n")])])]),t("blockquote",[t("p",[s._v("内存")])]),s._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[s._v("maxmemory "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("bytes"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# redis配置最大内存")]),s._v("\nmaxmemory-policy noeviction "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 内存达到上限的策略")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# volatile-lru：只对设置了过期时间的key进行LRU（默认）")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# allkeys-lru：删除LRU算法的key")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# volatile-lfu -> Evict using approximated LFU, only keys with an expire set.")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# allkeys-lfu -> Evict any key using approximated LFU.")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# volatile-random：随机删除即将过期的key")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# allkeys-random：随机删除key")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# volatile-ttl：删除即将过期的")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# noeviction：不做任何事，返回错误")]),s._v("\n")])])]),t("blockquote",[t("p",[s._v("AOF")])]),s._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[s._v("appendonly no "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 默认关闭aof模式，默认使用rdb模式")]),s._v("\nappendfilename "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"appendonly.aof"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# aof文件名字")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 同步策略")]),s._v("\nappendfsync always "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 每次修改同步")]),s._v("\nappendfsync everysec "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 每秒同步一次，")]),s._v("\nappendfsync no  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 操作系统自己决定同步频率")]),s._v("\n")])])])])}),[],!1,null,null,null);t.default=e.exports}}]);